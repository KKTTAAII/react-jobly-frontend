{"version":3,"sources":["UserInfoContext.js","NavBar.js","hooks.js","Companies/CompanyCard.js","api.js","helper.js","Pagination.js","Companies/CompaniesList.js","Jobs/JobCard.js","Companies/CompanyDetail.js","Jobs/JobList.js","Login&Signup/LogIn.js","Login&Signup/SignUp.js","Home.js","NotFound.js","Profile/Profile.js","Routes.js","App/App.js","serviceWorker.js","index.js","assets/error-404.png"],"names":["UserInfoContext","React","createContext","NavBar","_ref","logOut","isLoggedIn","useContext","react_default","a","createElement","className","reactstrap_module","expand","react_router_dom","exact","to","navbar","onClick","useFetch","request","_useState","useState","_useState2","Object","slicedToArray","resp","setResp","_useState3","_useState4","isLoading","setIsLoading","history","useHistory","useEffect","_getData","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","sent","t0","swal","push","console","log","stop","apply","this","arguments","getData","CompanyCard","name","description","handle","concat","JoblyApi","endpoint","data","method","url","process","headers","authorization","token","params","axios","error","response","message","Array","isArray","type","company","job","user","username","id","createError","parentClass","parent","document","querySelector","errorContainer","forEach","err","innerText","appendChild","removeErrElement","ele","element","firstElementChild","remove","empty","clearInputs","selecters","querySelectorAll","input","value","createInput","handleChange","label","Fragment","onChange","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","map","number","key","e","allLinks","getElementsByClassName","_step","_iterator","_createForOfIteratorHelper","s","n","done","classList","f","clearPreviousActiveLink","target","add","href","ERROR","CompaniesList","searchTerm","currentPage","setCurrentPage","compsPerPage","userInfo","_useFetch","getAll","_useFetch2","companies","setCompanies","lib_default","handleSubmit","preventDefault","_x","indexOfLastComp","indexOfFirstComp","allCompanies","slice","Companies_CompanyCard","onSubmit","placeholder","src_Pagination","length","pageNumber","JobCard","title","companyName","salary","equity","buttonValue","addJob","btnValue","setBtnValue","btnStatus","setBtnStatus","disabled","CompanyDetail","applications","setApplications","jwt_decode","useParams","getSingleInfo","companyJobs","jobs","getUsersJobs","_ref2","_callee2","jobId","newApplication","_context2","toConsumableArray","appliedJob","allJobs","Jobs_JobCard","includes","JobList","jobsPerPage","_useState5","_useState6","setJobs","_ref3","_callee3","_context3","_x2","INITIAL_STATE","password","WARNING","LogIn","logIn","formData","setFormData","isTouched","setIsTouched","isInvalid","setInvalid","_e$target","objectSpread","defineProperty","firstName","lastName","email","SignUp","signup","Home","Companies_CompaniesList","NotFound","src","ERROR_PIC","alt","Profile","currentUser","_getFormData","getFormData","authenticate","updateInfo","color","Routes","setIsLoggedIn","setCurrentUser","_useLocalStorageState","defaultValue","JSON","parse","window","localStorage","getItem","Error","state","setState","setItem","stringify","useLocalStorageState","_useLocalStorageState2","setToken","decodedToken","_getUser","getUser","signUp","newUserToken","abrupt","_token","src_UserInfoContext","Provider","src_NavBar","react_router","path","Login_Signup_LogIn","Login_Signup_SignUp","src_Home","Companies_CompanyDetail","Jobs_JobList","src_Profile_Profile","src_NotFound","App","src_Routes","Boolean","location","hostname","match","ReactDOM","render","src_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"mQAIeA,EAFSC,IAAMC,sBC8CfC,MA1Cf,SAAAC,GAA4B,IAAVC,EAAUD,EAAVC,OAERC,EADSC,qBAAWP,GACpBM,WACR,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQC,OAAO,MACbL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,IAAIL,UAAU,gBAAhC,SAICL,EACCE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,qBAAqBM,QAAM,GACxCT,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASE,GAAG,aAAaL,UAAU,eAAnC,cAEFH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASE,GAAG,QAAQL,UAAU,eAA9B,SAEFH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASE,GAAG,WAAWL,UAAU,eAAjC,YAEFH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASE,GAAG,IAAIE,QAASb,EAAQM,UAAU,eAA3C,aAMJH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKD,UAAU,qBAAqBM,QAAM,GACxCT,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASE,GAAG,SAASL,UAAU,eAA/B,WAEFH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAASE,GAAG,UAAUL,UAAU,eAAhC,gCCnCd,SAASQ,EAASC,GAAS,IAAAC,EACDC,mBAAS,IADRC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAClBK,EADkBH,EAAA,GACZI,EADYJ,EAAA,GAAAK,EAESN,oBAAS,GAFlBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAElBE,EAFkBD,EAAA,GAEPE,EAFOF,EAAA,GAGnBG,EAAUC,cAiBhB,OAfAC,oBAAU,WAAW,SAAAC,IAAA,OAAAA,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KACnB,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEsBxB,EAFtB,OAEUoB,EAFVE,EAAAG,KAGIlB,EAAQa,GACRT,GAAa,GAJjBW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAMIK,IAAK,mBACLf,EAAQgB,KAAK,KACbC,QAAQC,IAARR,EAAAI,IARJ,yBAAAJ,EAAAS,SAAAZ,EAAA,kBADmBa,MAAAC,KAAAC,YAAA,WAAAnB,EAAAiB,MAAAC,KAAAC,WAYnBC,IACC,IAEI,CAAC7B,EAAMI,EAAWH,SCJZ6B,MAff,SAAApD,GAAoD,IAA7BqD,EAA6BrD,EAA7BqD,KAAMC,EAAuBtD,EAAvBsD,YAAaC,EAAUvD,EAAVuD,OACxC,OACEnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAE,cAAA4C,OAAgBD,GAAUhD,UAAU,oBAC1CH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,oBACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWD,UAAU,qBAAqB8C,GAC1CjD,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAW8C,0DCkGRG,+IA9FQC,sGAAUC,iCAAO,GAAIC,iCAAS,MAI3CC,YAlBOC,iDAkBcJ,GACrBK,EAAU,CAAEC,cAAa,UAAAR,OAAYP,KAAKgB,QAC1CC,EAAoB,QAAXN,EAAmBD,EAAO,qBAGzBQ,IAAM,CAAEN,MAAKD,SAAQD,OAAMO,SAAQH,mDAAYJ,8CAE7Dd,QAAQuB,MAAM,aAAc9B,EAAAI,GAAI2B,UAC5BC,EAAUhC,EAAAI,GAAI2B,SAASV,KAAKS,MAAME,QAChCC,MAAMC,QAAQF,GAAWA,EAAU,CAACA,uLAO1BG,EAAMd,EAAMM,gFAC9BhB,KAAKgB,MAAQA,EAAMA,eACDhB,KAAKjC,QAAL,GAAAwC,OAAgBiB,EAAhB,KAAyBd,iBAArCvB,2BACCA,EAAIqC,yLAIcA,EAAMP,EAAQD,gFACvChB,KAAKgB,MAAQA,EAAMA,eACDhB,KAAKjC,QAAL,GAAAwC,OAAgBiB,EAAhB,KAAAjB,OAAwBU,cAApC9B,SACO,cAATqC,2CACKrC,EAAIsC,mBACO,SAATD,4CACFrC,EAAIuC,gBACO,UAATF,4CACFrC,EAAIwC,+LAKeH,EAAMP,yFAChBjB,KAAKjC,QAAL,GAAAwC,OAAgBiB,EAAhB,KAAAjB,OAAwBU,GAAU,GAAI,wBAAlD9B,2BACCA,gLAIYqC,EAAMd,yFACPV,KAAKjC,QAAL,GAAAwC,OAAgBiB,EAAhB,KAAyBd,EAAM,kBAA3CvB,SACO,cAATqC,2CACKrC,EAAIsC,mBACO,SAATD,4CACFrC,EAAIuC,gBACO,UAATF,4CACFrC,EAAIwC,uLAKSH,EAAMP,EAAQP,EAAMM,gFAC1ChB,KAAKgB,MAAQA,EAAMA,eACDhB,KAAKjC,QAAL,GAAAwC,OAAgBiB,EAAhB,KAAAjB,OAAwBU,GAAUP,EAAM,mBAApDvB,SACO,cAATqC,2CACKrC,EAAIsC,mBACO,SAATD,4CACFrC,EAAIuC,gBACO,UAATF,4CACFrC,EAAIwC,2LAOSC,EAAUC,EAAIb,gFACpChB,KAAKgB,MAAQA,EAAMA,eACDhB,KAAKjC,QAAL,SAAAwC,OAAsBqB,EAAtB,UAAArB,OAAuCsB,GAAM,GAAI,sBAA7D1C,2BACCA,uLAMiBuB,yFACNV,KAAKjC,QAAL,aAA2B2C,EAAM,sBAA7CvB,2BACCA,6KAIWuB,yFACAV,KAAKjC,QAAL,gBAA8B2C,EAAM,sBAAhDvB,2BACCA,soCClGX,SAAS2C,EAAYC,EAAa1D,GAChC,IAAM2D,EAASC,SAASC,cAAcH,GAChCI,EAAiBF,SAAS5E,cAAc,OAC9C8E,EAAe7E,UAAY,gBAC3Be,EAAK+D,QAAQ,SAAAC,GACX,IAAMlB,EAAQc,SAAS5E,cAAc,SACrC8D,EAAM7D,UAAY,SAClB6D,EAAMmB,UAAYD,EAClBF,EAAeI,YAAYpB,KAE7Ba,EAAOO,YAAYJ,GAGrB,SAASK,EAAiBC,GACpBA,KApBN,SAAeC,GACb,KAAOA,EAAQC,mBACbD,EAAQC,kBAAkBC,SAmB1BC,CAAMJ,GACNA,EAAIG,UAIR,SAASE,EAAYC,GACJd,SAASe,iBAAiBD,GAClCX,QAAQ,SAAAa,GACbA,EAAMC,MAAQ,KAIlB,SAASC,EAAY/C,EAAMoB,EAAM0B,EAAOE,EAAcC,GACpD,OACElG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkG,SAAA,KACEnG,EAAAC,EAAAC,cAAA,aAAQgG,EAAR,KACAlG,EAAAC,EAAAC,cAAA,SACE+C,KAAMA,EACNyB,GAAIzB,EACJoB,KAAMA,EACN0B,MAAOA,EACPK,SAAUH,WCVHI,MA9Bf,SAAAzG,GAEE,IAF0D,IAAtC0G,EAAsC1G,EAAtC0G,aAAcC,EAAwB3G,EAAxB2G,WAAYC,EAAY5G,EAAZ4G,SACxCC,EAAc,GACXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKL,EAAaD,GAAeI,IACzDD,EAAYjE,KAAKkE,GAEnB,OACE1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACXsG,EAAYI,IAAI,SAAAC,GACf,OACE9G,EAAAC,EAAAC,cAAA,MAAI6G,IAAKD,EAAQ3G,UAAU,aACzBH,EAAAC,EAAAC,cAAA,KACEQ,QAAS,SAAAsG,GACPR,EAASM,GDiC3B,WACE,IAAMG,EAAWnC,SAASoC,uBAAuB,aACjD,GAAID,EAAJ,CAAc,IAAAE,EAAAC,EAAAC,EACKJ,GADL,IACZ,IAAAG,EAAAE,MAAAH,EAAAC,EAAAG,KAAAC,MAA2BL,EAAApB,MACpB0B,UAAUhC,OAAO,UAFZ,MAAAP,GAAAkC,EAAAJ,EAAA9B,GAAA,QAAAkC,EAAAM,MClCEC,GACAX,EAAEY,OAAOH,UAAUI,IAAI,WAEzBC,KAAI,IAAA1E,OAAM0D,GACV3G,UAAU,aAET2G,SCbXiB,SAAQ,0BA0HCC,MAxHf,WAAyB,IAKnBC,EALmBpH,EACeC,mBAAS,GADxBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAChBqH,EADgBnH,EAAA,GACHoH,EADGpH,EAAA,GAAAK,EAEAN,mBAAS,IAAzBsH,EAFgBpH,OAAAC,EAAA,EAAAD,CAAAI,EAAA,MAGjBiH,EAAWtI,qBAAWP,GACpBM,EAAsBuI,EAAtBvI,WAAY+D,EAAUwE,EAAVxE,MAMpB,IAAmB,IAAf/D,IAAyB+D,EAC3B,OACE7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAE,UAAR,WAdiB,IAAA8H,EAmBsB3H,EAC3C0C,EAASkF,OAAO,YAAa,GAAI1E,IApBZ2E,EAAAxH,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAmBhBG,EAnBgBD,EAAA,GAmBLlH,EAnBKkH,EAAA,GAmBME,EAnBNF,EAAA,GAuBvB,GAAIlH,EACF,OACEtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,OAKN,IAKM2I,EAAY,eAAAhJ,EAAAoB,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KAAG,SAAAC,EAAMiF,GAAN,IAAAhF,EAAA,OAAAH,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnB4E,EAAE6B,iBADiB3G,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGCiB,EAASkF,OACzB,YACA,CAAEtF,KAAMgF,GACRpE,GANe,OAGX7B,EAHWE,EAAAG,KAQjBqG,EAAa1G,GACC8C,SAASC,cAAc,4BAC/BgB,MAAQ,GAVG7D,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAYjBO,QAAQC,IAARR,EAAAI,IACAC,IAAKwF,GAbY,yBAAA7F,EAAAS,SAAAZ,EAAA,kBAAH,gBAAA+G,GAAA,OAAAlJ,EAAAgD,MAAAC,KAAAC,YAAA,GAkBZiG,EAAkBb,EAAcE,EAChCY,EAAmBD,EAAkBX,EASrCa,EAReR,EAAUS,MAAMF,EAAkBD,GAQrBlC,IAAI,SAAAvC,GAAW,IACvCrB,EAA8BqB,EAA9BrB,KAAMC,EAAwBoB,EAAxBpB,YAAaC,EAAWmB,EAAXnB,OAC3B,OACEnD,EAAAC,EAAAC,cAACiJ,EAAD,CACElG,KAAMA,EACNC,YAAaA,EACb6D,IAAK5D,EACLA,OAAQA,MAKd,OACEnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMkJ,SAAUR,EAAczI,UAAU,2BACtCH,EAAAC,EAAAC,cAAA,SACEkG,SAlDW,SAAAY,GAAK,IAChBjB,EAAUiB,EAAEY,OAAZ7B,MACRkC,EAAalC,GAiDL1B,KAAK,OACLpB,KAAK,YACLyB,GAAG,YACH2E,YAAY,uBACZlJ,UAAU,4BAEZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAAlB,YAGH8I,EACDjJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UACEQ,QArCiB,WACvByH,EAAe,SAAAD,GAAW,OAAIA,EAAc,KAqCtC/H,UAAS,QAAAiD,OAA0B,IAAhB8E,EAAoB,WAAa,KAFtD,QAMAlI,EAAAC,EAAAC,cAACoJ,EAAD,CACEhD,aAAc8B,EACd7B,WAAYkC,EAAUc,OACtB/C,SA9FS,SAAAgD,GAAU,OAAIrB,EAAeqB,MAgGxCxJ,EAAAC,EAAAC,cAAA,UACEQ,QA7Ca,WACnByH,EAAe,SAAAD,GAAW,OAAIA,EAAc,KA6CtC/H,UAAS,QAAAiD,OACP8E,IAAgBO,EAAUc,OAASnB,GACnCK,EAAUc,OAASnB,EACf,WACA,KANR,yBCjEOqB,MAhDf,SAAA7J,GAQG,IAPD8J,EAOC9J,EAPD8J,MACAC,EAMC/J,EAND+J,YACAC,EAKChK,EALDgK,OACAC,EAICjK,EAJDiK,OACAC,EAGClK,EAHDkK,YACAC,EAECnK,EAFDmK,OACArF,EACC9E,EADD8E,GACC7D,EAC+BC,mBAASgJ,GADxC/I,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACMmJ,EADNjJ,EAAA,GACgBkJ,EADhBlJ,EAAA,GAAAK,EAEiCN,oBAAS,GAF1CO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEM8I,EAFN7I,EAAA,GAEiB8I,EAFjB9I,EAAA,GAUD,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMD,UAAU,gBACdH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAWD,UAAU,iBAAiBuJ,GACtC1J,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAeuJ,GACf3J,EAAAC,EAAAC,cAACE,EAAA,EAAD,gBAAmBwJ,GACnB5J,EAAAC,EAAAC,cAACE,EAAA,EAAD,gBAAmByJ,IAEJ,YAAhBC,EACC9J,EAAAC,EAAAC,cAAA,UAAQkK,UAAU,EAAMjK,UAAU,eAC/B6J,GAGHhK,EAAAC,EAAAC,cAAA,UACEQ,QAAS,WAtBI,IAAAqF,EAuBXgE,EAAOrF,GAtBjBuF,EADqBlE,EAwBI,WAtBX,YAAVA,GACFoE,GAAa,IAuBPC,SAAUF,EACV/J,UAAU,uBAET6J,cCjCPjC,SAAQ,0BAkFCsC,MAhFf,WAAyB,IAAAxJ,EACiBC,qBADjBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAChByJ,EADgBvJ,EAAA,GACFwJ,EADExJ,EAAA,GAEjBsH,EAAWtI,qBAAWP,GACpBM,EAAsBuI,EAAtBvI,WAAY+D,EAAUwE,EAAVxE,MAEdY,EADe+F,YAAW3G,EAAMA,OACRY,SAItBtB,EAAWsH,cAAXtH,OATemF,EAUU3H,EAC/B0C,EAASqH,cAAc,YAAavH,EAAQU,IAXvB2E,EAAAxH,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAUhBqC,EAVgBnC,EAAA,GAUHlH,EAVGkH,EAAA,GAafoC,EAA4BD,EAA5BC,KAAM3H,EAAsB0H,EAAtB1H,KAAMC,EAAgByH,EAAhBzH,YAepB,GAbAxB,oBAAU,WACR,KAAI,eAAA9B,EAAAoB,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KACF,SAAAC,IAAA,IAAAb,EAAA,OAAAW,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBiB,EAASqH,cAAc,QAASjG,EAAUZ,GAD/D,OACQ3C,EADRgB,EAAAG,KAEEkI,EAAgBrJ,EAAKoJ,cAFvB,wBAAApI,EAAAS,SAAAZ,MADE,yBAAAnC,EAAAgD,MAAAC,KAAAC,YAAA,EAKF+H,GACA,MAAO7D,GACPvE,QAAQC,IAAIsE,GACZzE,IAAKwF,KAEN,CAAClE,KAEe,IAAf/D,IAAyB+D,EAC3B,OACE7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAE,UAAR,WAKN,GAAIc,IAAcgJ,EAChB,OACEtK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,OAKN,IAAM8J,EAAM,eAAAe,EAAA9J,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KAAG,SAAAiJ,EAAMC,GAAN,IAAAC,EAAA,OAAApJ,EAAA5B,EAAAgC,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cAAA8I,EAAA/I,KAAA,EAEL8I,EAAiBD,EACvBT,EAAgB,SAAAD,GAAY,SAAAlH,OAAApC,OAAAmK,EAAA,EAAAnK,CAAQsJ,GAAR,CAAsBW,MAHvCC,EAAA9I,KAAA,EAILiB,EAAS+H,WAAW3G,EAAUuG,EAAOnH,GAJhC,OAAAqH,EAAA9I,KAAA,gBAAA8I,EAAA/I,KAAA,EAAA+I,EAAA5I,GAAA4I,EAAA,SAMXzI,QAAQC,IAARwI,EAAA5I,IACAC,IAAKwF,GAPM,yBAAAmD,EAAAvI,SAAAoI,EAAA,iBAAH,gBAAAjC,GAAA,OAAAgC,EAAAlI,MAAAC,KAAAC,YAAA,GAWNuI,EAAUT,EAAK/D,IAAI,SAAAtC,GAAO,IACtBmF,EAA8BnF,EAA9BmF,MAAOhF,EAAuBH,EAAvBG,GAAIkF,EAAmBrF,EAAnBqF,OAAQC,EAAWtF,EAAXsF,OAC3B,OACE7J,EAAAC,EAAAC,cAACoL,EAAD,CACE5B,MAAOA,EACPE,OAAQA,EACRC,OAAQA,EACRnF,GAAIA,EACJqC,IAAKrC,EACLoF,YAAaQ,EAAaiB,SAAS7G,GAAM,UAAY,QACrDqF,OAAQA,MAKd,OACE/J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyB8C,GACxCjD,EAAAC,EAAAC,cAAA,WAAMgD,GACNlD,EAAAC,EAAAC,cAAA,WAAMmL,KC5ENtD,SAAQ,0BAuJCyD,MArJf,WAAmB,IAcbvD,EAdapH,EACqBC,mBAAS,GAD9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACVqH,EADUnH,EAAA,GACGoH,EADHpH,EAAA,GAAAK,EAEKN,mBAAS,IAAxB2K,EAFUzK,OAAAC,EAAA,EAAAD,CAAAI,EAAA,MAAAsK,EAGuB5K,qBAHvB6K,EAAA3K,OAAAC,EAAA,EAAAD,CAAA0K,EAAA,GAGVpB,EAHUqB,EAAA,GAGIpB,EAHJoB,EAAA,GAIXtD,EAAWtI,qBAAWP,GACpBM,EAAsBuI,EAAtBvI,WAAY+D,EAAUwE,EAAVxE,MAKdY,EAJe+F,YAAW3G,EAAMA,OAIRY,SAVb6D,EAWkB3H,EACjC0C,EAASkF,OAAO,OAAQ,GAAI1E,IAZb2E,EAAAxH,OAAAC,EAAA,EAAAD,CAAAsH,EAAA,GAWVsC,EAXUpC,EAAA,GAWJlH,EAXIkH,EAAA,GAWOoD,EAXPpD,EAAA,GAgCjB,GAbA9G,oBAAU,WACR,KAAI,eAAA9B,EAAAoB,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KACF,SAAAC,IAAA,IAAAb,EAAA,OAAAW,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACqBiB,EAASqH,cAAc,QAASjG,EAAUZ,GAD/D,OACQ3C,EADRgB,EAAAG,KAEEkI,EAAgBrJ,EAAKoJ,cAFvB,wBAAApI,EAAAS,SAAAZ,MADE,yBAAAnC,EAAAgD,MAAAC,KAAAC,YAAA,EAKF+H,GACA,MAAO7D,GACPvE,QAAQC,IAAIsE,GACZzE,IAAKwF,KAEN,CAAClE,KAEe,IAAf/D,IAAyB+D,EAC3B,OACE7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAE,UAAR,WAKN,GAAIc,IAAcgJ,EAChB,OACEtK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,OAKN,IAKM2I,EAAY,eAAAkC,EAAA9J,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KAAG,SAAAiJ,EAAM/D,GAAN,IAAAhF,EAAA,OAAAH,EAAA5B,EAAAgC,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cACnB4E,EAAE6B,iBADiBqC,EAAA/I,KAAA,EAAA+I,EAAA9I,KAAA,EAGCiB,EAASkF,OAAO,OAAQ,CAAEmB,MAAOzB,GAAcpE,GAHhD,OAGX7B,EAHWkJ,EAAA7I,KAIjBuJ,EAAQ5J,GACM8C,SAASC,cAAc,4BAC/BgB,MAAQ,GANGmF,EAAA9I,KAAA,iBAAA8I,EAAA/I,KAAA,GAAA+I,EAAA5I,GAAA4I,EAAA,SAQjBzI,QAAQC,IAARwI,EAAA5I,IACAC,IAAKwF,GATY,yBAAAmD,EAAAvI,SAAAoI,EAAA,kBAAH,gBAAAjC,GAAA,OAAAgC,EAAAlI,MAAAC,KAAAC,YAAA,GAaZiH,EAAM,eAAA8B,EAAA7K,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KAAG,SAAAgK,EAAMd,GAAN,IAAAC,EAAA,OAAApJ,EAAA5B,EAAAgC,KAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,cAAA2J,EAAA5J,KAAA,EAEL8I,EAAiBD,EACvBT,EAAgB,SAAAD,GAAY,SAAAlH,OAAApC,OAAAmK,EAAA,EAAAnK,CAAQsJ,GAAR,CAAsBW,MAHvCc,EAAA3J,KAAA,EAILiB,EAAS+H,WAAW3G,EAAUuG,EAAOnH,GAJhC,OAAAkI,EAAA3J,KAAA,gBAAA2J,EAAA5J,KAAA,EAAA4J,EAAAzJ,GAAAyJ,EAAA,SAMXtJ,QAAQC,IAARqJ,EAAAzJ,IACAC,IAAKwF,GAPM,yBAAAgE,EAAApJ,SAAAmJ,EAAA,iBAAH,gBAAAE,GAAA,OAAAH,EAAAjJ,MAAAC,KAAAC,YAAA,GAYNiG,EAAkBb,EAAcuD,EAChCzC,EAAmBD,EAAkB0C,EASrCJ,EARcT,EAAK1B,MAAMF,EAAkBD,GAQrBlC,IAAI,SAAAtC,GAAO,IAC7BmF,EAA2CnF,EAA3CmF,MAAOE,EAAoCrF,EAApCqF,OAAQC,EAA4BtF,EAA5BsF,OAAQnF,EAAoBH,EAApBG,GAAIiF,EAAgBpF,EAAhBoF,YACnC,OACE3J,EAAAC,EAAAC,cAACoL,EAAD,CACE5B,MAAOA,EACPC,YAAaA,EACbC,OAAQA,EACRC,OAAQA,EACRnF,GAAIA,EACJqC,IAAKrC,EACLoF,YAAaQ,EAAaiB,SAAS7G,GAAM,UAAY,QACrDqF,OAAQA,MAKd,OACE/J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMkJ,SAAUR,GACd5I,EAAAC,EAAAC,cAAA,SACEkG,SA7DW,SAAAY,GAAK,IAChBjB,EAAUiB,EAAEY,OAAZ7B,MACRkC,EAAalC,GA4DL1B,KAAK,OACLpB,KAAK,OACLyB,GAAG,OACH2E,YAAY,uBACZlJ,UAAU,4BAEZH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yBAAlB,YAGHkL,EACDrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UACEQ,QAzCiB,WACvByH,EAAe,SAAAD,GAAW,OAAIA,EAAc,KAyCtC/H,UAAS,QAAAiD,OAA0B,IAAhB8E,EAAoB,WAAa,KAFtD,QAMAlI,EAAAC,EAAAC,cAACoJ,EAAD,CACEhD,aAAcmF,EACdlF,WAAYqE,EAAKrB,OACjB/C,SAlHS,SAAAgD,GAAU,OAAIrB,EAAeqB,MAoHxCxJ,EAAAC,EAAAC,cAAA,UACEQ,QAjDa,WACnByH,EAAe,SAAAD,GAAW,OAAIA,EAAc,KAiDtC/H,UAAS,QAAAiD,OACP8E,IAAgB0C,EAAKrB,OAASkC,GAC9Bb,EAAKrB,OAASkC,EACV,WACA,KANR,2BCxIFQ,SAAgB,CACpBxH,SAAU,GACVyH,SAAU,KAGNC,EAAU,0BA8DDC,MA5Df,SAAAxM,GAA0B,IAATyM,EAASzM,EAATyM,MACT7K,EAAUC,cADQZ,EAEQC,mBAASmL,GAFjBlL,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEjByL,EAFiBvL,EAAA,GAEPwL,EAFOxL,EAAA,GAAAK,EAGUN,oBAAS,GAHnBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGjBoL,EAHiBnL,EAAA,GAGNoL,EAHMpL,EAAA,GAAAqK,EAIQ5K,oBAAS,GAJjB6K,EAAA3K,OAAAC,EAAA,EAAAD,CAAA0K,EAAA,GAIjBgB,EAJiBf,EAAA,GAINgB,EAJMhB,EAAA,GAMlB1F,EAAe,SAAAe,GAAK,IAAA4F,EACA5F,EAAEY,OAAlB3E,EADgB2J,EAChB3J,KAAM8C,EADU6G,EACV7G,MACdwG,EAAY,SAAAD,GAAQ,OAAAtL,OAAA6L,EAAA,EAAA7L,CAAA,GACfsL,EADetL,OAAA8L,EAAA,EAAA9L,CAAA,GAEjBiC,EAAO8C,MAEV0G,GAAa,GACM,KAAnBzF,EAAEY,OAAO7B,MAAe4G,GAAW,GAAQA,GAAW,IAGlD/D,EAAY,eAAAkC,EAAA9J,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KAAG,SAAAC,EAAMiF,GAAN,IAAA9F,EAAA,OAAAW,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnB4E,EAAE6B,iBAEFxD,EAAiBP,SAASC,cAAc,mBACnC2H,EAJc,CAAAxK,EAAAE,KAAA,gBAKjBmK,EAAYN,GALK/J,EAAAE,KAAA,EAMAiK,EAAMC,GANN,QAMbpL,EANagB,EAAAG,OAQfsC,EAAY,wBAAyBzD,GACrCyE,EAAY,yBAEZnE,EAAQgB,KAAK,cAXEN,EAAAE,KAAA,iBAcjBG,IAAK,wBACLE,QAAQC,IAAI,qBAfK,yBAAAR,EAAAS,SAAAZ,MAAH,gBAAA+G,GAAA,OAAAgC,EAAAlI,MAAAC,KAAAC,YAAA,GAmBlB,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,UACAH,EAAAC,EAAAC,cAAA,QAAMkJ,SAAUR,EAAczI,UAAU,mCACrC6F,EACC,WACA,OACAsG,EAAS7H,SACTwB,EACA,YAEDD,EACC,WACA,WACAsG,EAASJ,SACTjG,EACA,YAEDyG,GAAaF,GAAaxM,EAAAC,EAAAC,cAAA,aAAQiM,GACnCnM,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAlB,aC7DF8L,SAAgB,CACpBxH,SAAU,GACVyH,SAAU,GACVa,UAAW,GACXC,SAAU,GACVC,MAAO,KAGHd,EAAU,0BAgFDe,MA9Ef,SAAAtN,GAA4B,IAAVuN,EAAUvN,EAAVuN,OAAUtM,EACMC,mBAASmL,GADflL,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnByL,EADmBvL,EAAA,GACTwL,EADSxL,EAAA,GAAAK,EAEQN,oBAAS,GAFjBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEnBoL,EAFmBnL,EAAA,GAERoL,EAFQpL,EAAA,GAAAqK,EAGM5K,oBAAS,GAHf6K,EAAA3K,OAAAC,EAAA,EAAAD,CAAA0K,EAAA,GAGnBgB,EAHmBf,EAAA,GAGRgB,EAHQhB,EAAA,GAIpBnK,EAAUC,cAEVwE,EAAe,SAAAe,GAAK,IAAA4F,EACA5F,EAAEY,OAAlB3E,EADgB2J,EAChB3J,KAAM8C,EADU6G,EACV7G,MACdwG,EAAY,SAAAD,GAAQ,OAAAtL,OAAA6L,EAAA,EAAA7L,CAAA,GACfsL,EADetL,OAAA8L,EAAA,EAAA9L,CAAA,GAEjBiC,EAAO8C,MAEV0G,GAAa,GACM,KAAnBzF,EAAEY,OAAO7B,MAAe4G,GAAW,GAAQA,GAAW,IAGlD/D,EAAY,eAAAkC,EAAA9J,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KAAG,SAAAC,EAAMiF,GAAN,IAAA9F,EAAA,OAAAW,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnB4E,EAAE6B,iBACF0D,EAAYN,GAEZ5G,EAAiBP,SAASC,cAAc,mBACnC2H,EALc,CAAAxK,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAMA+K,EAAOb,GANP,QAMbpL,EANagB,EAAAG,OAQfsC,EAAY,eAAgBzD,GAC5ByE,EAAY,wDAEZnE,EAAQgB,KAAK,cAXEN,EAAAE,KAAA,iBAcjBG,IAAK,wBACLE,QAAQC,IAAI,qBAfK,yBAAAR,EAAAS,SAAAZ,MAAH,gBAAA+G,GAAA,OAAAgC,EAAAlI,MAAAC,KAAAC,YAAA,GAmBlB,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,WACAH,EAAAC,EAAAC,cAAA,QAAMkJ,SAAUR,EAAczI,UAAU,eACrC6F,EACC,WACA,OACAsG,EAAS7H,SACTwB,EACA,YAEDD,EACC,WACA,WACAsG,EAASJ,SACTjG,EACA,YAEDD,EACC,YACA,OACAsG,EAASS,UACT9G,EACA,cAEDD,EACC,WACA,OACAsG,EAASU,SACT/G,EACA,aAEDD,EAAY,QAAS,QAASsG,EAASW,MAAOhH,EAAc,SAC5DyG,GAAaF,GAAaxM,EAAAC,EAAAC,cAAA,aAAQiM,GACnCnM,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAlB,YAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,sBACqBH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAE,UAAR,mBC3DZ4M,MA5Bf,WACE,IACQtN,EADSC,qBAAWP,GACpBM,WAER,OACEE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACZL,EACCE,EAAAC,EAAAC,cAACmN,EAAD,MAEArN,EAAAC,EAAAC,cAAAF,EAAAC,EAAAkG,SAAA,KACEnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,0CAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAE,UACNR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAlB,WAEFH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAE,WACNR,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAlB,yCCRCmN,OAZf,WACE,OACEtN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAf,2EAGAH,EAAAC,EAAAC,cAAA,OAAKqN,IAAKC,IAAWC,IAAI,qBAAqBtN,UAAU,iBACxDH,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAE,IAAOL,UAAU,qBAAzB,eCHAgM,WAAU,2BACVpE,GAAQ,0BAoHC2F,OAlHf,WACE,IAAMrF,EAAWtI,qBAAWP,GACpBM,EAAmCuI,EAAnCvI,WAAY+D,EAAuBwE,EAAvBxE,MAAO8J,EAAgBtF,EAAhBsF,YAFV9M,EAGeC,mBAAS6M,GAHxB5M,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGVyL,EAHUvL,EAAA,GAGAwL,EAHAxL,EAAA,GAAAK,EAIiBN,oBAAS,GAJ1BO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAIVoL,EAJUnL,EAAA,GAICoL,EAJDpL,EAAA,GAAAqK,EAKe5K,oBAAS,GALxB6K,EAAA3K,OAAAC,EAAA,EAAAD,CAAA0K,EAAA,GAKVgB,EALUf,EAAA,GAKCgB,EALDhB,EAAA,GAOjB,IAAmB,IAAf7L,IAAyB+D,EAC3B,OACE7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8CACAF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAME,GAAE,UAAR,WAmBN,GAdAkB,oBAAU,WAAM,SAAAkM,IAAA,OAAAA,EAAA5M,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KACd,SAAAC,IAAA,OAAAF,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,IACEmK,EAAYoB,GACZ,MAAO3G,GACPvE,QAAQC,IAAIsE,GACZzE,IAAKwF,IALT,wBAAA7F,EAAAS,SAAAZ,OADca,MAAAC,KAAAC,YAAA,WAAA8K,EAAAhL,MAAAC,KAAAC,WASd+K,IACC,CAACF,KAICrB,EACH,OACEtM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACyI,EAAA1I,EAAD,OAKN,IAAMgG,EAAe,SAAAe,GAAK,IAAA4F,EACA5F,EAAEY,OAAlB3E,EADgB2J,EAChB3J,KAAM8C,EADU6G,EACV7G,MACdwG,EAAY,SAAAD,GAAQ,OAAAtL,OAAA6L,EAAA,EAAA7L,CAAA,GACfsL,EADetL,OAAA8L,EAAA,EAAA9L,CAAA,GAEjBiC,EAAO8C,MAEV0G,GAAa,GACM,KAAnBzF,EAAEY,OAAO7B,MAAe4G,GAAW,GAAQA,GAAW,IAGlD/D,EAAY,eAAAhJ,EAAAoB,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KAAG,SAAAiJ,EAAM/D,GAAN,OAAAnF,EAAA5B,EAAAgC,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,UACnB4E,EAAE6B,iBAEFxD,EAAiBP,SAASC,cAAc,mBACnC2H,EAJc,CAAAxB,EAAA9I,KAAA,gBAAA8I,EAAA/I,KAAA,EAAA+I,EAAA9I,KAAA,EAMTiB,EAASyK,aAAa,CAC1BrJ,SAAU6H,EAAS7H,SACnByH,SAAUI,EAASJ,WARN,cAAAhB,EAAA9I,KAAA,EAUTiB,EAAS0K,WACb,QACAzB,EAAS7H,SACT,CACEsI,UAAWT,EAASS,UACpBC,SAAUV,EAASU,SACnBC,MAAOX,EAASW,OAElBpJ,GAlBa,OAoBfpB,QAAQC,IAAI,4BACZH,IAAK,4BArBU2I,EAAA9I,KAAA,iBAAA8I,EAAA/I,KAAA,GAAA+I,EAAA5I,GAAA4I,EAAA,SAuBfvG,EAAY,yBAADuG,EAAA5I,IAvBI,QAAA4I,EAAA9I,KAAA,iBA0BjBG,IAAKwF,IACLtF,QAAQC,IAAI,qBA3BK,yBAAAwI,EAAAvI,SAAAoI,EAAA,kBAAH,gBAAAjC,GAAA,OAAAlJ,EAAAgD,MAAAC,KAAAC,YAAA,GA+BlB,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkBwN,EAAYlJ,UAC7CzE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,QAAMkJ,SAAUR,EAAczI,UAAU,gBACrC6F,EACC,YACA,OACAsG,EAASS,UACT9G,EACA,cAEDD,EACC,WACA,OACAsG,EAASU,SACT/G,EACA,aAEDD,EAAY,QAAS,QAASsG,EAASW,MAAOhH,EAAc,SAC7DjG,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,SACEmE,KAAK,WACLpB,KAAK,WACLyB,GAAG,WACH0B,SAAUH,IAEXyG,GAAaF,GAAaxM,EAAAC,EAAAC,cAAA,SAAO8N,MAAM,WAAW7B,IACnDnM,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAlB,2BCQK8N,OA3Gf,WAAkB,IAIZxJ,EAJY5D,EACoBC,oBAAS,GAD7BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTf,EADSiB,EAAA,GACGmN,EADHnN,EAAA,GAAAK,EAEsBN,qBAFtBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETuM,EAFStM,EAAA,GAEI8M,EAFJ9M,EAAA,GAAA+M,EdOlB,SAA8BrH,EAAKsH,GAAc,IAAA3C,EACrB5K,mBAAS,WACjC,IAEE,OADYwN,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ3H,IAAQsH,GAE3D,MAAOrH,GACP,MAAM,IAAI2H,MAAM3H,MAN2B2E,EAAA3K,OAAAC,EAAA,EAAAD,CAAA0K,EAAA,GACxCkD,EADwCjD,EAAA,GACjCkD,EADiClD,EAAA,GAc/C,OAJAjK,oBAAU,WACR8M,OAAOC,aAAaK,QAAQ/H,EAAKuH,KAAKS,UAAUH,KAC/C,CAAC7H,EAAK6H,IAEF,CAACA,EAAOC,GclBWG,CAAqB,QAAS,MAHxCC,EAAAjO,OAAAC,EAAA,EAAAD,CAAAoN,EAAA,GAGTvK,EAHSoL,EAAA,GAGFC,EAHED,EAAA,GAMhB,GAAIpL,EAAO,CACT,IAAMsL,EAAe3E,YAAW3G,EAAMA,OACtCY,EAAW0K,EAAa1K,SAG1B/C,oBAAU,WAAM,SAAA0N,IAAA,OAAAA,EAAApO,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KACd,SAAAC,IAAA,IAAAyC,EAAA,OAAA3C,EAAA5B,EAAAgC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEuBiB,EAASqH,cAAc,QAASjG,EAAUZ,GAFjE,QAEUW,EAFVtC,EAAAG,QAIM8L,EAAe3J,GACf0J,GAAc,IALpBhM,EAAAE,KAAA,sBAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAQIK,IAAK,2BACC,IAAIoM,MAAJzM,EAAAI,IATV,yBAAAJ,EAAAS,SAAAZ,EAAA,kBADca,MAAAC,KAAAC,WAcde,EAdc,WAAAuL,EAAAxM,MAAAC,KAAAC,WAcNuM,GAAY5M,QAAQC,IAAI,sBAC/B,CAACmB,IAEJ,IAAMyL,EAAM,eAAA1P,EAAAoB,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KAAG,SAAAiJ,EAAMxH,GAAN,IAAAgM,EAAA/K,EAAA,OAAA3C,EAAA5B,EAAAgC,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cAAA8I,EAAA/I,KAAA,EAAA+I,EAAA9I,KAAA,EAEgBiB,EAASiM,OAAO/L,GAFhC,cAELgM,EAFKrE,EAAA7I,KAAA6I,EAAA9I,KAAA,EAGQiB,EAASqH,cAC1B,QACAnH,EAAKkB,SACL8K,GANS,OAGL/K,EAHK0G,EAAA7I,KAQX6M,EAASK,GACTpB,EAAe3J,GACf0J,GAAc,GAVHhD,EAAA9I,KAAA,wBAAA8I,EAAA/I,KAAA,GAAA+I,EAAA5I,GAAA4I,EAAA,SAYXzI,QAAQC,IAARwI,EAAA5I,IAZW4I,EAAAsE,OAAA,SAAAtE,EAAA5I,IAAA,yBAAA4I,EAAAvI,SAAAoI,EAAA,kBAAH,gBAAAjC,GAAA,OAAAlJ,EAAAgD,MAAAC,KAAAC,YAAA,GAiBNuJ,EAAK,eAAAvB,EAAA9J,OAAAY,EAAA,EAAAZ,CAAAa,EAAA5B,EAAA6B,KAAG,SAAAgK,EAAMvI,GAAN,IAAAkM,EAAAjL,EAAA,OAAA3C,EAAA5B,EAAAgC,KAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,cAAA2J,EAAA5J,KAAA,EAAA4J,EAAA3J,KAAA,EAEUiB,EAASyK,aAAavK,GAFhC,cAEJM,EAFIkI,EAAA1J,KAAA0J,EAAA3J,KAAA,EAGSiB,EAASqH,cAAc,QAASnH,EAAKkB,SAAUZ,GAHxD,OAGJW,EAHIuH,EAAA1J,KAIV6M,EAASrL,GACTsK,EAAe3J,GACf0J,GAAc,GANJnC,EAAA3J,KAAA,wBAAA2J,EAAA5J,KAAA,GAAA4J,EAAAzJ,GAAAyJ,EAAA,SAQVtJ,QAAQC,IAARqJ,EAAAzJ,IARUyJ,EAAAyD,OAAA,SAAAzD,EAAAzJ,IAAA,yBAAAyJ,EAAApJ,SAAAmJ,EAAA,kBAAH,gBAAAE,GAAA,OAAAlB,EAAAlI,MAAAC,KAAAC,YAAA,GAmBX,OACE9C,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACwP,EAAgBC,SAAjB,CACE5J,MAAO,CACL4H,YAAaA,EACb9J,MAAOA,EACP/D,WAAYA,IAGdE,EAAAC,EAAAC,cAAC0P,EAAD,CAAQ/P,OAfC,WACbqP,EAAS,MACTf,IACAD,GAAc,MAaVlO,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACdH,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,KACE7P,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOtP,OAAK,EAACuP,KAAK,UAChB9P,EAAAC,EAAAC,cAAC6P,EAAD,CAAO1D,MAAOA,KAEhBrM,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOtP,OAAK,EAACuP,KAAK,WAChB9P,EAAAC,EAAAC,cAAC8P,EAAD,CAAQ7C,OAAQmC,KAElBtP,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOtP,OAAK,EAACuP,KAAK,KAChB9P,EAAAC,EAAAC,cAAC+P,EAAD,OAEFjQ,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOtP,OAAK,EAACuP,KAAK,cAChB9P,EAAAC,EAAAC,cAACmN,EAAD,OAEFrN,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOtP,OAAK,EAACuP,KAAK,sBAChB9P,EAAAC,EAAAC,cAACgQ,EAAD,OAEFlQ,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOtP,OAAK,EAACuP,KAAK,SAChB9P,EAAAC,EAAAC,cAACiQ,EAAD,OAEFnQ,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,CAAOtP,OAAK,EAACuP,KAAK,YAChB9P,EAAAC,EAAAC,cAACkQ,GAAD,OAEFpQ,EAAAC,EAAAC,cAAC2P,EAAA,EAAD,KACE7P,EAAAC,EAAAC,cAACmQ,GAAD,mBC1GCC,OARf,WACE,OACEtQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACqQ,GAAD,QCKcC,QACW,cAA7BhC,OAAOiC,SAASC,UAEe,UAA7BlC,OAAOiC,SAASC,UAEhBlC,OAAOiC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7Q,EAAAC,EAAAC,cAAC4Q,GAAD,MAAShM,SAASiM,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCE/HnBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.08a438f2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst UserInfoContext = React.createContext();\r\n\r\nexport default UserInfoContext;","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\r\nimport UserInfoContext from \"./UserInfoContext\";\r\nimport \"./css/NavBar.css\";\r\n\r\nfunction NavBar({ logOut }) {\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn } = userInfo;\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Navbar expand=\"md\">\r\n        <NavLink exact to=\"/\" className=\"navbar-brand\">\r\n          Jobly\r\n        </NavLink>\r\n\r\n        {isLoggedIn ? (\r\n          <Nav className=\"ml-auto NavBar-Nav\" navbar>\r\n            <NavItem>\r\n              <NavLink to=\"/companies\" className=\"navbar-link\">Companies</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/jobs\" className=\"navbar-link\">Jobs</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/profile\" className=\"navbar-link\">Profile</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/\" onClick={logOut} className=\"navbar-link\">\r\n                Log out\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        ) : (\r\n          <Nav className=\"ml-auto NavBar-Nav\" navbar>\r\n            <NavItem>\r\n              <NavLink to=\"/login\" className=\"navbar-link\">Log in</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/signup\" className=\"navbar-link\">Sign up</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        )}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction useFetch(request) {\r\n  const [resp, setResp] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(function() {\r\n    async function getData() {\r\n      try {\r\n        const res = await request;\r\n        setResp(res);\r\n        setIsLoading(false);\r\n      } catch (e) {\r\n        swal(\"Oops, not found\");\r\n        history.push(\"/\");\r\n        console.log(e);\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return [resp, isLoading, setResp];\r\n}\r\n\r\nfunction useLocalStorageState(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    try {\r\n      let value = JSON.parse(window.localStorage.getItem(key) || defaultValue);\r\n      return value;\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\n\r\nexport { useFetch, useLocalStorageState };\r\n","import React from \"react\";\r\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/CompanyCard.css\";\r\n\r\nfunction CompanyCard({ name, description, handle }) {\r\n  return (\r\n    <div className=\"CompanyCard\">\r\n      <Link to={`/companies/${handle}`} className=\"CompanyCard-Link\">\r\n        <Card className=\"CompanyCard-card\">\r\n          <CardBody>\r\n            <CardTitle className=\"CompanyCard-title\">{name}</CardTitle>\r\n            <CardText>{description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyCard;\r\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { authorization: `Bearer ${this.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  //Get all info - companies, jobs, users\n  static async getAll(type, data, token) {\n    this.token = token.token;\n    const res = await this.request(`${type}/`, data);\n    return res[type];\n  }\n\n  //Get individual info - companies:handle, jobs:id, users:username\n  static async getSingleInfo(type, params, token) {\n    this.token = token.token;\n    const res = await this.request(`${type}/${params}`);\n    if (type === \"companies\") {\n      return res.company;\n    } else if (type === \"jobs\") {\n      return res.job;\n    } else if (type === \"users\") {\n      return res.user;\n    }\n  }\n\n  //Delete individual info - companies:handle, jobs:id, users:username\n  static async deleteSingleInfo(type, params) {\n    const res = await this.request(`${type}/${params}`, {}, \"delete\");\n    return res;\n  }\n\n  //Add individual info - companies, jobs, users\n  static async addInfo(type, data) {\n    const res = await this.request(`${type}/`, data, \"post\");\n    if (type === \"companies\") {\n      return res.company;\n    } else if (type === \"jobs\") {\n      return res.job;\n    } else if (type === \"users\") {\n      return res.user;\n    }\n  }\n\n  //Update individual info - companies:handle, jobs:id, users:username\n  static async updateInfo(type, params, data, token) {\n    this.token = token.token;\n    const res = await this.request(`${type}/${params}`, data, \"patch\");\n    if (type === \"companies\") {\n      return res.company;\n    } else if (type === \"jobs\") {\n      return res.job;\n    } else if (type === \"users\") {\n      return res.user;\n    }\n  }\n\n  //JOBS route\n\n  /**Applied for a job */\n  static async appliedJob(username, id, token) {\n    this.token = token.token;\n    const res = await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n    return res;\n  }\n\n  //AUTH route\n\n  /**Authenticate for Log in */\n  static async authenticate(data) {\n    const res = await this.request(`auth/token`, data, \"post\");\n    return res;\n  }\n\n  /**Sign up */\n  static async signUp(data) {\n    const res = await this.request(`auth/register`, data, \"post\");\n    return res;\n  }\n}\n\nexport default JoblyApi;\n","import React from \"react\";\r\n\r\nfunction empty(element) {\r\n  while (element.firstElementChild) {\r\n    element.firstElementChild.remove();\r\n  }\r\n}\r\n\r\nfunction createError(parentClass, resp) {\r\n  const parent = document.querySelector(parentClass);\r\n  const errorContainer = document.createElement(\"div\");\r\n  errorContainer.className = \"err-container\";\r\n  resp.forEach(err => {\r\n    const error = document.createElement(\"small\");\r\n    error.className = \"APIErr\";\r\n    error.innerText = err;\r\n    errorContainer.appendChild(error);\r\n  });\r\n  parent.appendChild(errorContainer);\r\n}\r\n\r\nfunction removeErrElement(ele) {\r\n  if (ele) {\r\n    empty(ele);\r\n    ele.remove();\r\n  }\r\n}\r\n\r\nfunction clearInputs(selecters) {\r\n  const inputs = document.querySelectorAll(selecters);\r\n  inputs.forEach(input => {\r\n    input.value = \"\";\r\n  });\r\n}\r\n\r\nfunction createInput(name, type, value, handleChange, label) {\r\n  return (\r\n    <>\r\n      <label>{label}:</label>\r\n      <input\r\n        name={name}\r\n        id={name}\r\n        type={type}\r\n        value={value}\r\n        onChange={handleChange}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction clearPreviousActiveLink() {\r\n  const allLinks = document.getElementsByClassName(\"page-link\");\r\n  if (allLinks) {\r\n    for (let link of allLinks) {\r\n      link.classList.remove(\"active\");\r\n    }\r\n  } else {\r\n    return;\r\n  }\r\n}\r\n\r\nexport { empty, createError, removeErrElement, clearInputs, createInput, clearPreviousActiveLink };\r\n","import React from \"react\";\r\nimport { clearPreviousActiveLink } from \"./helper\";\r\nimport \"./css/Pagination.css\";\r\n\r\nfunction Pagination({ itemsPerPage, totalItems, paginate }) {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav className=\"pagination-nav\">\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map(number => {\r\n          return (\r\n            <li key={number} className=\"page-item\">\r\n              <a\r\n                onClick={e => {\r\n                  paginate(number);\r\n                  clearPreviousActiveLink();\r\n                  e.target.classList.add(\"active\");\r\n                }}\r\n                href={`#${number}`}\r\n                className=\"page-link\"\r\n              >\r\n                {number}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useFetch } from \"../hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CompanyCard from \"./CompanyCard\";\r\nimport LoadingSpin from \"react-loading-spin\";\r\nimport JoblyApi from \"../api\";\r\nimport UserInfoContext from \"../UserInfoContext\";\r\nimport Pagination from \"../Pagination\";\r\nimport \"../css/CompaniesList.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ERROR = \"Oops, somthing's wrong\";\r\n\r\nfunction CompaniesList() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [compsPerPage] = useState(10);\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn, token } = userInfo;\r\n  let searchTerm;\r\n\r\n  //Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  if (isLoggedIn === false && !token) {\r\n    return (\r\n      <div>\r\n        <p>Please log in to access this page</p>\r\n        <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const [companies, isLoading, setCompanies] = useFetch(\r\n    JoblyApi.getAll(\"companies\", {}, token)\r\n  );\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <LoadingSpin />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    searchTerm = value;\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await JoblyApi.getAll(\r\n        \"companies\",\r\n        { name: searchTerm },\r\n        token\r\n      );\r\n      setCompanies(res);\r\n      const input = document.querySelector(\".CompaniesList-searchBox\");\r\n      input.value = \"\";\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  };\r\n\r\n  //Get current comp\r\n  const indexOfLastComp = currentPage * compsPerPage;\r\n  const indexOfFirstComp = indexOfLastComp - compsPerPage;\r\n  const currentComps = companies.slice(indexOfFirstComp, indexOfLastComp);\r\n  const goToPreviousPage = () => {\r\n    setCurrentPage(currentPage => currentPage - 1);\r\n  };\r\n  const goToNextPage = () => {\r\n    setCurrentPage(currentPage => currentPage + 1);\r\n  };\r\n\r\n  const allCompanies = currentComps.map(company => {\r\n    const { name, description, handle } = company;\r\n    return (\r\n      <CompanyCard\r\n        name={name}\r\n        description={description}\r\n        key={handle}\r\n        handle={handle}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"CompaniesList\">\r\n      <div>\r\n        <form onSubmit={handleSubmit} className=\"CompaniesList-seachForm\">\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"companies\"\r\n            id=\"companies\"\r\n            placeholder=\"Enter search term...\"\r\n            className=\"CompaniesList-searchBox\"\r\n          ></input>\r\n          <button className=\"CompaniesList-btn\">Search</button>\r\n        </form>\r\n      </div>\r\n      {allCompanies}\r\n      <div className=\"CompaniesList-pages\">\r\n        <button\r\n          onClick={goToPreviousPage}\r\n          className={`prev ${currentPage === 1 ? \"disabled\" : \"\"}`}\r\n        >\r\n          prev\r\n        </button>\r\n        <Pagination\r\n          itemsPerPage={compsPerPage}\r\n          totalItems={companies.length}\r\n          paginate={paginate}\r\n        />\r\n        <button\r\n          onClick={goToNextPage}\r\n          className={`next ${\r\n            currentPage === companies.length / compsPerPage ||\r\n            companies.length < compsPerPage\r\n              ? \"disabled\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompaniesList;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardBody, CardTitle, CardText, CardSubtitle } from \"reactstrap\";\r\nimport \"../css/JobCard.css\";\r\n\r\nfunction JobCard({\r\n  title,\r\n  companyName,\r\n  salary,\r\n  equity,\r\n  buttonValue,\r\n  addJob,\r\n  id,\r\n}) {\r\n  const [btnValue, setBtnValue] = useState(buttonValue);\r\n  const [btnStatus, setBtnStatus] = useState(false);\r\n  const changeBtnValue = value => {\r\n    setBtnValue(value);\r\n    if (value === \"Applied\") {\r\n      setBtnStatus(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"JobCard\">\r\n      <Card className=\"JobCard-card\">\r\n        <CardBody>\r\n          <CardTitle className=\"JobCard-title\">{title}</CardTitle>\r\n          <CardSubtitle>{companyName}</CardSubtitle>\r\n          <CardText>Salary: {salary}</CardText>\r\n          <CardText>Equity: {equity}</CardText>\r\n        </CardBody>\r\n        {buttonValue === \"Applied\" ? (\r\n          <button disabled={true} className=\"JobCard-btn\">\r\n            {btnValue}\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              addJob(id);\r\n              changeBtnValue(\"Applied\");\r\n            }}\r\n            disabled={btnStatus}\r\n            className=\"JobCard-btn applied\"\r\n          >\r\n            {btnValue}\r\n          </button>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobCard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { useFetch } from \"../hooks\";\r\nimport JoblyApi from \"../api\";\r\nimport LoadingSpin from \"react-loading-spin\";\r\nimport JobCard from \"../Jobs/JobCard\";\r\nimport UserInfoContext from \"../UserInfoContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"../css/CompanyDetail.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ERROR = \"Oops, somthing's wrong\";\r\n\r\nfunction CompanyDetail() {\r\n  const [applications, setApplications] = useState();\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn, token } = userInfo;\r\n  const decodedToken = jwt_decode(token.token);\r\n  const username = decodedToken.username;\r\n  //I have to extract username from token instead of using currentUser\r\n  //from useContext because when I refresh the page, the currentUser.username\r\n  //turns to undifined before it fetches data. Is there a better way to do this?\r\n  const { handle } = useParams();\r\n  const [companyJobs, isLoading] = useFetch(\r\n    JoblyApi.getSingleInfo(\"companies\", handle, token)\r\n  );\r\n  const { jobs, name, description } = companyJobs;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getUsersJobs() {\r\n        const resp = await JoblyApi.getSingleInfo(\"users\", username, token);\r\n        setApplications(resp.applications);\r\n      }\r\n      getUsersJobs();\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  }, [token]);\r\n\r\n  if (isLoggedIn === false && !token) {\r\n    return (\r\n      <div>\r\n        <p>Please log in to access this page</p>\r\n        <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading || !applications) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <LoadingSpin />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const addJob = async jobId => {\r\n    try {\r\n      const newApplication = jobId;\r\n      setApplications(applications => [...applications, newApplication]);\r\n      await JoblyApi.appliedJob(username, jobId, token);\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  };\r\n\r\n  const allJobs = jobs.map(job => {\r\n    const { title, id, salary, equity } = job;\r\n    return (\r\n      <JobCard\r\n        title={title}\r\n        salary={salary}\r\n        equity={equity}\r\n        id={id}\r\n        key={id}\r\n        buttonValue={applications.includes(id) ? \"Applied\" : \"Apply\"}\r\n        addJob={addJob}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"CompaniesDetail\">\r\n      <div className=\"CompaniesDetail-title\">{name}</div>\r\n      <div>{description}</div>\r\n      <div>{allJobs}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyDetail;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingSpin from \"react-loading-spin\";\r\nimport { useFetch } from \"../hooks\";\r\nimport JobCard from \"./JobCard\";\r\nimport UserInfoContext from \"../UserInfoContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport JoblyApi from \"../api\";\r\nimport Pagination from \"../Pagination\";\r\nimport \"../css/JobList.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ERROR = \"Oops, somthing's wrong\";\r\n\r\nfunction JobList() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [jobsPerPage] = useState(20);\r\n  const [applications, setApplications] = useState();\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn, token } = userInfo;\r\n  const decodedToken = jwt_decode(token.token);\r\n  //I have to extract username from token instead of using currentUser\r\n  //from useContext because when I refresh the page, the currentUser.username\r\n  //turns to undifined before it fetches data. Is there a better way to do this?\r\n  const username = decodedToken.username;\r\n  const [jobs, isLoading, setJobs] = useFetch(\r\n    JoblyApi.getAll(\"jobs\", {}, token)\r\n  );\r\n  let searchTerm;\r\n\r\n  //Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getUsersJobs() {\r\n        const resp = await JoblyApi.getSingleInfo(\"users\", username, token);\r\n        setApplications(resp.applications);\r\n      }\r\n      getUsersJobs();\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  }, [token]);\r\n\r\n  if (isLoggedIn === false && !token) {\r\n    return (\r\n      <div>\r\n        <p>Please log in to access this page</p>\r\n        <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading || !applications) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <LoadingSpin />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    searchTerm = value;\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await JoblyApi.getAll(\"jobs\", { title: searchTerm }, token);\r\n      setJobs(res);\r\n      const input = document.querySelector(\".JobList-searchbox-input\");\r\n      input.value = \"\";\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  };\r\n\r\n  const addJob = async jobId => {\r\n    try {\r\n      const newApplication = jobId;\r\n      setApplications(applications => [...applications, newApplication]);\r\n      await JoblyApi.appliedJob(username, jobId, token);\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  };\r\n\r\n  //Get current jobs\r\n  const indexOfLastComp = currentPage * jobsPerPage;\r\n  const indexOfFirstComp = indexOfLastComp - jobsPerPage;\r\n  const currentJobs = jobs.slice(indexOfFirstComp, indexOfLastComp);\r\n  const goToPreviousPage = () => {\r\n    setCurrentPage(currentPage => currentPage - 1);\r\n  };\r\n  const goToNextPage = () => {\r\n    setCurrentPage(currentPage => currentPage + 1);\r\n  };\r\n\r\n  const allJobs = currentJobs.map(job => {\r\n    const { title, salary, equity, id, companyName } = job;\r\n    return (\r\n      <JobCard\r\n        title={title}\r\n        companyName={companyName}\r\n        salary={salary}\r\n        equity={equity}\r\n        id={id}\r\n        key={id}\r\n        buttonValue={applications.includes(id) ? \"Applied\" : \"Apply\"}\r\n        addJob={addJob}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"JobList\">\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"jobs\"\r\n            id=\"jobs\"\r\n            placeholder=\"Enter search term...\"\r\n            className=\"JobList-searchbox-input\"\r\n          ></input>\r\n          <button className=\"JobList-searchbox-btn\">Search</button>\r\n        </form>\r\n      </div>\r\n      {allJobs}\r\n      <div className=\"JobList-pages\">\r\n        <button\r\n          onClick={goToPreviousPage}\r\n          className={`prev ${currentPage === 1 ? \"disabled\" : \"\"}`}\r\n        >\r\n          prev\r\n        </button>\r\n        <Pagination\r\n          itemsPerPage={jobsPerPage}\r\n          totalItems={jobs.length}\r\n          paginate={paginate}\r\n        />\r\n        <button\r\n          onClick={goToNextPage}\r\n          className={`next ${\r\n            currentPage === jobs.length / jobsPerPage ||\r\n            jobs.length < jobsPerPage\r\n              ? \"disabled\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobList;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  removeErrElement,\r\n  clearInputs,\r\n  createError,\r\n  createInput,\r\n} from \"../helper\";\r\nimport swal from 'sweetalert';\r\nimport \"../css/Login.css\"\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst WARNING = \"All fields are required\";\r\n\r\nfunction LogIn({ logIn }) {\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const [isInvalid, setInvalid] = useState(true);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(formData => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n    setIsTouched(true);\r\n    e.target.value === \"\" ? setInvalid(true) : setInvalid(false);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    //clear old errors\r\n    removeErrElement(document.querySelector(\".err-container\"));\r\n    if (!isInvalid) {\r\n      setFormData(INITIAL_STATE);\r\n      let resp = await logIn(formData);\r\n      if (resp) {\r\n        createError(\".LogIn-Form-Container\", resp);\r\n        clearInputs(\"#username, #password\");\r\n      } else {\r\n        history.push(\"/companies\");\r\n      }\r\n    } else {\r\n      swal(\"Oop, somthings wrong\");\r\n      console.log(\"something's wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"LogIn\">\r\n      <div className=\"LogIn-header\">Log in</div>\r\n      <form onSubmit={handleSubmit} className=\"LogIn-form LogIn-Form-Container\">\r\n        {createInput(\r\n          \"username\",\r\n          \"text\",\r\n          formData.username,\r\n          handleChange,\r\n          \"Username\"\r\n        )}\r\n        {createInput(\r\n          \"password\",\r\n          \"password\",\r\n          formData.password,\r\n          handleChange,\r\n          \"Password\"\r\n        )}\r\n        {isInvalid && isTouched && <small>{WARNING}</small>}\r\n        <button className=\"LogIn-button\">Log in</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  clearInputs,\r\n  createError,\r\n  createInput,\r\n  removeErrElement,\r\n} from \"../helper\";\r\nimport swal from \"sweetalert\";\r\nimport \"../css/Signup.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  password: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n};\r\n\r\nconst WARNING = \"All fields are required\";\r\n\r\nfunction SignUp({ signup }) {\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const [isInvalid, setInvalid] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(formData => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n    setIsTouched(true);\r\n    e.target.value === \"\" ? setInvalid(true) : setInvalid(false);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setFormData(INITIAL_STATE);\r\n    //clear old errors\r\n    removeErrElement(document.querySelector(\".err-container\"));\r\n    if (!isInvalid) {\r\n      let resp = await signup(formData); //if there is resp returned, it's error(s)\r\n      if (resp) {\r\n        createError(\".SignUp-form\", resp);\r\n        clearInputs(\"#username, #password, #firstName, #lastName, #email\");\r\n      } else {\r\n        history.push(\"/companies\");\r\n      }\r\n    } else {\r\n      swal(\"Oop, somthings wrong\");\r\n      console.log(\"something's wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SignUp\">\r\n      <div className=\"SignUp-header\">Sign up</div>\r\n      <form onSubmit={handleSubmit} className=\"SignUp-form\">\r\n        {createInput(\r\n          \"username\",\r\n          \"text\",\r\n          formData.username,\r\n          handleChange,\r\n          \"Username\"\r\n        )}\r\n        {createInput(\r\n          \"password\",\r\n          \"password\",\r\n          formData.password,\r\n          handleChange,\r\n          \"Password\"\r\n        )}\r\n        {createInput(\r\n          \"firstName\",\r\n          \"text\",\r\n          formData.firstName,\r\n          handleChange,\r\n          \"First Name\"\r\n        )}\r\n        {createInput(\r\n          \"lastName\",\r\n          \"text\",\r\n          formData.lastName,\r\n          handleChange,\r\n          \"Last Name\"\r\n        )}\r\n        {createInput(\"email\", \"email\", formData.email, handleChange, \"Email\")}\r\n        {isInvalid && isTouched && <small>{WARNING}</small>}\r\n        <button className=\"SignUp-button\">Sign up</button>\r\n      </form>\r\n      <div className=\"SignUp-already\">\r\n        Already signed up? <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useContext } from \"react\";\r\nimport UserInfoContext from \"./UserInfoContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CompaniesList from \"./Companies/CompaniesList\";\r\nimport \"./css/Home.css\";\r\n\r\nfunction Home() {\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn } = userInfo;\r\n  \r\n  return (\r\n    <div className=\"Jobly\">\r\n      {isLoggedIn ? (\r\n        <CompaniesList />\r\n      ) : (\r\n        <>\r\n          <div className=\"Jobly-header\">Jobly</div>\r\n          <div className=\"Jobly-description\">\r\n            All the jobs in one, convenient place.\r\n          </div>\r\n          <div className=\"Jobly-btn-container\">\r\n            <Link to={`/login`}>\r\n              <button className=\"Jobly-btn\">Log in</button>\r\n            </Link>\r\n            <Link to={`/signup`}>\r\n              <button className=\"Jobly-btn\">Sign up</button>\r\n            </Link>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./css/NotFound.css\";\r\nimport ERROR_PIC from \"./assets/error-404.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <div className=\"NoutFound-text\">\r\n        Sorry, we did not find the page you were looking for. Please try again!\r\n      </div>\r\n      <img src={ERROR_PIC} alt=\"404-Page-Not-Found\" className=\"NotFound-img\"></img>\r\n      <Link to={`/`} className=\"NotFound-backHome\">Back home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport UserInfoContext from \"../UserInfoContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createError, removeErrElement, createInput } from \"../helper\";\r\nimport LoadingSpin from \"react-loading-spin\";\r\nimport JoblyApi from \"../api\";\r\nimport \"../css/Profile.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst WARNING = \"All fields are required\";\r\nconst ERROR = \"Oops, something's wrong\";\r\n\r\nfunction Profile() {\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn, token, currentUser } = userInfo;\r\n  const [formData, setFormData] = useState(currentUser);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const [isInvalid, setInvalid] = useState(true);\r\n\r\n  if (isLoggedIn === false && !token) {\r\n    return (\r\n      <div>\r\n        <p>Please log in to access this page</p>\r\n        <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getFormData() {\r\n      try {\r\n        setFormData(currentUser);\r\n      } catch (e) {\r\n        console.log(e);\r\n        swal(ERROR);\r\n      }\r\n    }\r\n    getFormData();\r\n  }, [currentUser]);\r\n\r\n  //get the data for form data first\r\n  //- it's from currentUser\r\n  if (!formData) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <LoadingSpin />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(formData => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n    setIsTouched(true);\r\n    e.target.value === \"\" ? setInvalid(true) : setInvalid(false);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    //clear old errors everytime it submits\r\n    removeErrElement(document.querySelector(\".err-container\"));\r\n    if (!isInvalid) {\r\n      try {\r\n        await JoblyApi.authenticate({\r\n          username: formData.username,\r\n          password: formData.password,\r\n        });\r\n        await JoblyApi.updateInfo(\r\n          \"users\",\r\n          formData.username,\r\n          {\r\n            firstName: formData.firstName,\r\n            lastName: formData.lastName,\r\n            email: formData.email,\r\n          },\r\n          token\r\n        );\r\n        console.log(\"Profile has been updated\");\r\n        swal(\"Profile has been updated\");\r\n      } catch (e) {\r\n        createError(\".Update-Form-Container\", e);\r\n      }\r\n    } else {\r\n      swal(ERROR);\r\n      console.log(\"something's wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Profile\">\r\n      <div className=\"Profile-header\">{currentUser.username}</div>\r\n      <div className=\"Update-Form-Container\">\r\n        <form onSubmit={handleSubmit} className=\"Profile-form\">\r\n          {createInput(\r\n            \"firstName\",\r\n            \"text\",\r\n            formData.firstName,\r\n            handleChange,\r\n            \"First Name\"\r\n          )}\r\n          {createInput(\r\n            \"lastName\",\r\n            \"text\",\r\n            formData.lastName,\r\n            handleChange,\r\n            \"Last Name\"\r\n          )}\r\n          {createInput(\"email\", \"email\", formData.email, handleChange, \"Email\")}\r\n          <label>Confirm your Password to make changes:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n          {isInvalid && isTouched && <small color=\"warning\">{WARNING}</small>}\r\n          <button className=\"Profile-btn\">Save Changes</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./NavBar\";\r\nimport CompaniesList from \"./Companies/CompaniesList\";\r\nimport CompanyDetail from \"./Companies/CompanyDetail\";\r\nimport JobList from \"./Jobs/JobList\";\r\nimport LogIn from \"./Login&Signup/LogIn\";\r\nimport SignUp from \"./Login&Signup/SignUp\";\r\nimport Home from \"./Home\";\r\nimport NotFound from \"./NotFound\";\r\nimport Profile from \"./Profile/Profile\";\r\n\r\nimport UserInfoContext from \"./UserInfoContext\";\r\nimport JoblyApi from \"./api\";\r\nimport { useLocalStorageState } from \"./hooks\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport swal from \"sweetalert\";\r\nimport \"./css/Routes.css\";\r\n\r\nfunction Routes() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [token, setToken] = useLocalStorageState(\"token\", null);\r\n  let username;\r\n\r\n  if (token) {\r\n    const decodedToken = jwt_decode(token.token);\r\n    username = decodedToken.username;\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getUser() {\r\n      try {\r\n        const user = await JoblyApi.getSingleInfo(\"users\", username, token);\r\n        if (user) {\r\n          setCurrentUser(user);\r\n          setIsLoggedIn(true);\r\n        }\r\n      } catch (e) {\r\n        swal(\"Oops, something's wrong\");\r\n        throw new Error(e);\r\n      }\r\n    }\r\n    //if I do not check if there is token, I run into error. Is this okay/common to do?\r\n    token ? getUser() : console.log(\"No logged in user\");\r\n  }, [token]);\r\n\r\n  const signUp = async data => {\r\n    try {\r\n      const newUserToken = await JoblyApi.signUp(data);\r\n      const user = await JoblyApi.getSingleInfo(\r\n        \"users\",\r\n        data.username,\r\n        newUserToken\r\n      );\r\n      setToken(newUserToken);\r\n      setCurrentUser(user);\r\n      setIsLoggedIn(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return e;\r\n    }\r\n  };\r\n\r\n  const logIn = async data => {\r\n    try {\r\n      const token = await JoblyApi.authenticate(data);\r\n      const user = await JoblyApi.getSingleInfo(\"users\", data.username, token);\r\n      setToken(token);\r\n      setCurrentUser(user);\r\n      setIsLoggedIn(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return e;\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    setToken(null);\r\n    setCurrentUser();\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <UserInfoContext.Provider\r\n        value={{\r\n          currentUser: currentUser,\r\n          token: token,\r\n          isLoggedIn: isLoggedIn,\r\n        }}\r\n      >\r\n        <Navbar logOut={logOut} />\r\n        <main className=\"Routes-main\">\r\n          <Switch>\r\n            <Route exact path=\"/login\">\r\n              <LogIn logIn={logIn} />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <SignUp signup={signUp} />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/companies\">\r\n              <CompaniesList />\r\n            </Route>\r\n            <Route exact path=\"/companies/:handle\">\r\n              <CompanyDetail />\r\n            </Route>\r\n            <Route exact path=\"/jobs\">\r\n              <JobList />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </UserInfoContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport Routes from \"../Routes\";\nimport \"../css/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/error-404.11ed1efd.png\";"],"sourceRoot":""}