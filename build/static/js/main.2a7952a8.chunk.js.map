{"version":3,"sources":["UserInfoContext.js","NavBar.js","hooks.js","Companies/CompanyCard.js","api.js","Pagination.js","Companies/CompaniesList.js","Jobs/JobCard.js","Companies/CompanyDetail.js","Jobs/JobList.js","helper.js","Login&Signup/LogIn.js","Login&Signup/SignUp.js","Home.js","NotFound.js","Profile/Profile.js","Routes.js","App/App.js","serviceWorker.js","index.js","assets/error-404.png"],"names":["UserInfoContext","React","createContext","NavBar","_ref","logOut","isLoggedIn","useContext","react_default","a","createElement","className","reactstrap_module","expand","react_router_dom","exact","to","navbar","onClick","useFetch","request","_useState","useState","_useState2","Object","slicedToArray","resp","setResp","_useState3","_useState4","isLoading","setIsLoading","history","useHistory","useEffect","_getData","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","sent","t0","swal","push","console","log","stop","apply","this","arguments","getData","CompanyCard","name","description","handle","concat","JoblyApi","endpoint","data","method","url","process","headers","authorization","token","params","axios","error","response","message","Array","isArray","type","company","job","user","username","id","Pagination","itemsPerPage","totalItems","paginate","pageNumbers","i","Math","ceil","map","number","key","href","ERROR","CompaniesList","searchTerm","currentPage","setCurrentPage","compsPerPage","userInfo","_useFetch","getAll","_useFetch2","companies","setCompanies","lib_default","handleSubmit","e","preventDefault","_x","indexOfLastComp","indexOfFirstComp","allCompanies","slice","Companies_CompanyCard","onSubmit","onChange","value","target","placeholder","src_Pagination","length","pageNumber","JobCard","title","companyName","salary","equity","buttonValue","addJob","btnValue","setBtnValue","btnStatus","setBtnStatus","disabled","CompanyDetail","applications","setApplications","jwt_decode","useParams","getSingleInfo","companyJobs","jobs","getUsersJobs","_ref2","_callee2","jobId","newApplication","_context2","toConsumableArray","appliedJob","allJobs","Jobs_JobCard","includes","JobList","jobsPerPage","_useState5","_useState6","setJobs","_ref3","_callee3","_context3","_x2","createError","parentClass","parent","document","querySelector","errorContainer","forEach","err","innerText","appendChild","removeErrElement","ele","element","firstElementChild","remove","empty","clearInputs","selecters","querySelectorAll","input","createInput","handleChange","label","Fragment","INITIAL_STATE","password","WARNING","LogIn","logIn","formData","setFormData","isTouched","setIsTouched","isInvalid","setInvalid","_e$target","objectSpread","defineProperty","firstName","lastName","email","SignUp","signup","Home","Companies_CompaniesList","NotFound","src","ERROR_PIC","alt","Profile","currentUser","_getFormData","getFormData","authenticate","updateInfo","color","Routes","setIsLoggedIn","setCurrentUser","_useLocalStorageState","defaultValue","JSON","parse","window","localStorage","getItem","Error","state","setState","setItem","stringify","useLocalStorageState","_useLocalStorageState2","setToken","decodedToken","_getUser","getUser","signUp","newUserToken","abrupt","_token","src_UserInfoContext","Provider","src_NavBar","react_router","path","Login_Signup_LogIn","Login_Signup_SignUp","src_Home","Companies_CompanyDetail","Jobs_JobList","src_Profile_Profile","src_NotFound","App","src_Routes","Boolean","location","hostname","match","ReactDOM","render","src_App_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.2a7952a8.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst UserInfoContext = React.createContext();\r\n\r\nexport default UserInfoContext;","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavItem } from \"reactstrap\";\r\nimport UserInfoContext from \"./UserInfoContext\";\r\nimport \"./css/NavBar.css\";\r\n\r\nfunction NavBar({ logOut }) {\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn } = userInfo;\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Navbar expand=\"md\">\r\n        <NavLink exact to=\"/\" className=\"navbar-brand\">\r\n          Jobly\r\n        </NavLink>\r\n\r\n        {isLoggedIn ? (\r\n          <Nav className=\"ml-auto NavBar-Nav\" navbar>\r\n            <NavItem>\r\n              <NavLink to=\"/companies\" className=\"navbar-link\">Companies</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/jobs\" className=\"navbar-link\">Jobs</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/profile\" className=\"navbar-link\">Profile</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/\" onClick={logOut} className=\"navbar-link\">\r\n                Log out\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        ) : (\r\n          <Nav className=\"ml-auto NavBar-Nav\" navbar>\r\n            <NavItem>\r\n              <NavLink to=\"/login\" className=\"navbar-link\">Log in</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/signup\" className=\"navbar-link\">Sign up</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        )}\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport swal from \"sweetalert\";\r\n\r\nfunction useFetch(request) {\r\n  const [resp, setResp] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(function() {\r\n    async function getData() {\r\n      try {\r\n        const res = await request;\r\n        setResp(res);\r\n        setIsLoading(false);\r\n      } catch (e) {\r\n        swal(\"Oops, not found\");\r\n        history.push(\"/\");\r\n        console.log(e);\r\n      }\r\n    }\r\n    getData();\r\n  }, []);\r\n\r\n  return [resp, isLoading, setResp];\r\n}\r\n\r\nfunction useLocalStorageState(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    try {\r\n      let value = JSON.parse(window.localStorage.getItem(key) || defaultValue);\r\n      return value;\r\n    } catch (e) {\r\n      throw new Error(e);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n\r\n  return [state, setState];\r\n}\r\n\r\n\r\nexport { useFetch, useLocalStorageState };\r\n","import React from \"react\";\r\nimport { Card, CardBody, CardTitle, CardText } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/CompanyCard.css\";\r\n\r\nfunction CompanyCard({ name, description, handle }) {\r\n  return (\r\n    <div className=\"CompanyCard\">\r\n      <Link to={`/companies/${handle}`} className=\"CompanyCard-Link\">\r\n        <Card className=\"CompanyCard-card\">\r\n          <CardBody>\r\n            <CardTitle className=\"CompanyCard-title\">{name}</CardTitle>\r\n            <CardText>{description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyCard;\r\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { authorization: `Bearer ${this.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  //Get all info - companies, jobs, users\n  static async getAll(type, data, token) {\n    this.token = token.token;\n    const res = await this.request(`${type}/`, data);\n    return res[type];\n  }\n\n  //Get individual info - companies:handle, jobs:id, users:username\n  static async getSingleInfo(type, params, token) {\n    this.token = token.token;\n    const res = await this.request(`${type}/${params}`);\n    if (type === \"companies\") {\n      return res.company;\n    } else if (type === \"jobs\") {\n      return res.job;\n    } else if (type === \"users\") {\n      return res.user;\n    }\n  }\n\n  //Delete individual info - companies:handle, jobs:id, users:username\n  static async deleteSingleInfo(type, params) {\n    const res = await this.request(`${type}/${params}`, {}, \"delete\");\n    return res;\n  }\n\n  //Add individual info - companies, jobs, users\n  static async addInfo(type, data) {\n    const res = await this.request(`${type}/`, data, \"post\");\n    if (type === \"companies\") {\n      return res.company;\n    } else if (type === \"jobs\") {\n      return res.job;\n    } else if (type === \"users\") {\n      return res.user;\n    }\n  }\n\n  //Update individual info - companies:handle, jobs:id, users:username\n  static async updateInfo(type, params, data, token) {\n    this.token = token.token;\n    const res = await this.request(`${type}/${params}`, data, \"patch\");\n    if (type === \"companies\") {\n      return res.company;\n    } else if (type === \"jobs\") {\n      return res.job;\n    } else if (type === \"users\") {\n      return res.user;\n    }\n  }\n\n  //JOBS route\n\n  /**Applied for a job */\n  static async appliedJob(username, id, token) {\n    this.token = token.token;\n    const res = await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n    return res;\n  }\n\n  //AUTH route\n\n  /**Authenticate for Log in */\n  static async authenticate(data) {\n    const res = await this.request(`auth/token`, data, \"post\");\n    return res;\n  }\n\n  /**Sign up */\n  static async signUp(data) {\n    const res = await this.request(`auth/register`, data, \"post\");\n    return res;\n  }\n}\n\nexport default JoblyApi;\n","import React from \"react\";\r\nimport \"./css/Pagination.css\";\r\n\r\nfunction Pagination({ itemsPerPage, totalItems, paginate }) {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav className=\"pagination-nav\">\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map(number => (\r\n          <li key={number} className=\"page-item\">\r\n            <a\r\n              onClick={() => paginate(number)}\r\n              href={`#${number}`}\r\n              className=\"page-link\"\r\n            >\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useFetch } from \"../hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CompanyCard from \"./CompanyCard\";\r\nimport LoadingSpin from \"react-loading-spin\";\r\nimport JoblyApi from \"../api\";\r\nimport UserInfoContext from \"../UserInfoContext\";\r\nimport Pagination from \"../Pagination\";\r\nimport \"../css/CompaniesList.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ERROR = \"Oops, somthing's wrong\";\r\n\r\nfunction CompaniesList() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [compsPerPage] = useState(10);\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn, token } = userInfo;\r\n  let searchTerm;\r\n\r\n  //Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  if (isLoggedIn === false && !token) {\r\n    return (\r\n      <div>\r\n        <p>Please log in to access this page</p>\r\n        <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const [companies, isLoading, setCompanies] = useFetch(\r\n    JoblyApi.getAll(\"companies\", {}, token)\r\n  );\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <LoadingSpin />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    searchTerm = value;\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await JoblyApi.getAll(\r\n        \"companies\",\r\n        { name: searchTerm },\r\n        token\r\n      );\r\n      setCompanies(res);\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  };\r\n\r\n  //Get current comp\r\n  const indexOfLastComp = currentPage * compsPerPage;\r\n  const indexOfFirstComp = indexOfLastComp - compsPerPage;\r\n  const currentComps = companies.slice(indexOfFirstComp, indexOfLastComp);\r\n  const goToPreviousPage = () => {\r\n    setCurrentPage(currentPage => currentPage - 1);\r\n  };\r\n  const goToNextPage = () => {\r\n    setCurrentPage(currentPage => currentPage + 1);\r\n  };\r\n\r\n  const allCompanies = currentComps.map(company => {\r\n    const { name, description, handle } = company;\r\n    return (\r\n      <CompanyCard\r\n        name={name}\r\n        description={description}\r\n        key={handle}\r\n        handle={handle}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"CompaniesList\">\r\n      <div>\r\n        <form onSubmit={handleSubmit} className=\"CompaniesList-seachForm\">\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"companies\"\r\n            id=\"companies\"\r\n            placeholder=\"Enter search term...\"\r\n            className=\"CompaniesList-searchBox\"\r\n          ></input>\r\n          <button className=\"CompaniesList-btn\">Search</button>\r\n        </form>\r\n      </div>\r\n      {allCompanies}\r\n      <div className=\"CompaniesList-pages\">\r\n        <button\r\n          onClick={goToPreviousPage}\r\n          className={`prev ${currentPage === 1 ? \"disabled\" : \"\"}`}\r\n        >\r\n          prev\r\n        </button>\r\n        <Pagination\r\n          itemsPerPage={compsPerPage}\r\n          totalItems={companies.length}\r\n          paginate={paginate}\r\n        />\r\n        <button\r\n          onClick={goToNextPage}\r\n          className={`next ${\r\n            currentPage === companies.length / compsPerPage ? \"disabled\" : \"\"\r\n          }`}\r\n        >\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompaniesList;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardBody, CardTitle, CardText, CardSubtitle } from \"reactstrap\";\r\nimport \"../css/JobCard.css\";\r\n\r\nfunction JobCard({\r\n  title,\r\n  companyName,\r\n  salary,\r\n  equity,\r\n  buttonValue,\r\n  addJob,\r\n  id,\r\n}) {\r\n  const [btnValue, setBtnValue] = useState(buttonValue);\r\n  const [btnStatus, setBtnStatus] = useState(false);\r\n  const changeBtnValue = value => {\r\n    setBtnValue(value);\r\n    if (value === \"Applied\") {\r\n      setBtnStatus(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"JobCard\">\r\n      <Card className=\"JobCard-card\">\r\n        <CardBody>\r\n          <CardTitle className=\"JobCard-title\">{title}</CardTitle>\r\n          <CardSubtitle>{companyName}</CardSubtitle>\r\n          <CardText>Salary: {salary}</CardText>\r\n          <CardText>Equity: {equity}</CardText>\r\n        </CardBody>\r\n        {buttonValue === \"Applied\" ? (\r\n          <button disabled={true} className=\"JobCard-btn\">\r\n            {btnValue}\r\n          </button>\r\n        ) : (\r\n          <button\r\n            onClick={() => {\r\n              addJob(id);\r\n              changeBtnValue(\"Applied\");\r\n            }}\r\n            disabled={btnStatus}\r\n            className=\"JobCard-btn applied\"\r\n          >\r\n            {btnValue}\r\n          </button>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobCard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { useFetch } from \"../hooks\";\r\nimport JoblyApi from \"../api\";\r\nimport LoadingSpin from \"react-loading-spin\";\r\nimport JobCard from \"../Jobs/JobCard\";\r\nimport UserInfoContext from \"../UserInfoContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"../css/CompanyDetail.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ERROR = \"Oops, somthing's wrong\";\r\n\r\nfunction CompanyDetail() {\r\n  const [applications, setApplications] = useState();\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn, token } = userInfo;\r\n  const decodedToken = jwt_decode(token.token);\r\n  const username = decodedToken.username;\r\n  //I have to extract username from token instead of using currentUser\r\n  //from useContext because when I refresh the page, the currentUser.username\r\n  //turns to undifined before it fetches data. Is there a better way to do this?\r\n  const { handle } = useParams();\r\n  const [companyJobs, isLoading] = useFetch(\r\n    JoblyApi.getSingleInfo(\"companies\", handle, token)\r\n  );\r\n  const { jobs, name, description } = companyJobs;\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getUsersJobs() {\r\n        const resp = await JoblyApi.getSingleInfo(\"users\", username, token);\r\n        setApplications(resp.applications);\r\n      }\r\n      getUsersJobs();\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  }, [token]);\r\n\r\n  if (isLoggedIn === false && !token) {\r\n    return (\r\n      <div>\r\n        <p>Please log in to access this page</p>\r\n        <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading || !applications) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <LoadingSpin />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const addJob = async jobId => {\r\n    try {\r\n      const newApplication = jobId;\r\n      setApplications(applications => [...applications, newApplication]);\r\n      await JoblyApi.appliedJob(username, jobId, token);\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  };\r\n\r\n  const allJobs = jobs.map(job => {\r\n    const { title, id, salary, equity } = job;\r\n    return (\r\n      <JobCard\r\n        title={title}\r\n        salary={salary}\r\n        equity={equity}\r\n        id={id}\r\n        key={id}\r\n        buttonValue={applications.includes(id) ? \"Applied\" : \"Apply\"}\r\n        addJob={addJob}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"CompaniesDetail\">\r\n      <div className=\"CompaniesDetail-title\">{name}</div>\r\n      <div>{description}</div>\r\n      <div>{allJobs}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyDetail;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoadingSpin from \"react-loading-spin\";\r\nimport { useFetch } from \"../hooks\";\r\nimport JobCard from \"./JobCard\";\r\nimport UserInfoContext from \"../UserInfoContext\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport JoblyApi from \"../api\";\r\nimport Pagination from \"../Pagination\";\r\nimport \"../css/JobList.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst ERROR = \"Oops, somthing's wrong\";\r\n\r\nfunction JobList() {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [jobsPerPage] = useState(20);\r\n  const [applications, setApplications] = useState();\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn, token } = userInfo;\r\n  const decodedToken = jwt_decode(token.token);\r\n  //I have to extract username from token instead of using currentUser\r\n  //from useContext because when I refresh the page, the currentUser.username\r\n  //turns to undifined before it fetches data. Is there a better way to do this?\r\n  const username = decodedToken.username;\r\n  const [jobs, isLoading, setJobs] = useFetch(\r\n    JoblyApi.getAll(\"jobs\", {}, token)\r\n  );\r\n  let searchTerm;\r\n\r\n  //Change page\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      async function getUsersJobs() {\r\n        const resp = await JoblyApi.getSingleInfo(\"users\", username, token);\r\n        setApplications(resp.applications);\r\n      }\r\n      getUsersJobs();\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  }, [token]);\r\n\r\n  if (isLoggedIn === false && !token) {\r\n    return (\r\n      <div>\r\n        <p>Please log in to access this page</p>\r\n        <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading || !applications) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <LoadingSpin />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { value } = e.target;\r\n    searchTerm = value;\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await JoblyApi.getAll(\"jobs\", { title: searchTerm }, token);\r\n      setJobs(res);\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  };\r\n\r\n  const addJob = async jobId => {\r\n    try {\r\n      const newApplication = jobId;\r\n      setApplications(applications => [...applications, newApplication]);\r\n      await JoblyApi.appliedJob(username, jobId, token);\r\n    } catch (e) {\r\n      console.log(e);\r\n      swal(ERROR);\r\n    }\r\n  };\r\n\r\n  //Get current jobs\r\n  const indexOfLastComp = currentPage * jobsPerPage;\r\n  const indexOfFirstComp = indexOfLastComp - jobsPerPage;\r\n  const currentJobs = jobs.slice(indexOfFirstComp, indexOfLastComp);\r\n  const goToPreviousPage = () => {\r\n    setCurrentPage(currentPage => currentPage - 1);\r\n  };\r\n  const goToNextPage = () => {\r\n    setCurrentPage(currentPage => currentPage + 1);\r\n  };\r\n\r\n  const allJobs = currentJobs.map(job => {\r\n    const { title, salary, equity, id, companyName } = job;\r\n    return (\r\n      <JobCard\r\n        title={title}\r\n        companyName={companyName}\r\n        salary={salary}\r\n        equity={equity}\r\n        id={id}\r\n        key={id}\r\n        buttonValue={applications.includes(id) ? \"Applied\" : \"Apply\"}\r\n        addJob={addJob}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"JobList\">\r\n      <div>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"text\"\r\n            name=\"jobs\"\r\n            id=\"jobs\"\r\n            placeholder=\"Enter search term...\"\r\n            className=\"JobList-searchbox-input\"\r\n          ></input>\r\n          <button className=\"JobList-searchbox-btn\">Search</button>\r\n        </form>\r\n      </div>\r\n      {allJobs}\r\n      <div className=\"JobList-pages\">\r\n        <button\r\n          onClick={goToPreviousPage}\r\n          className={`prev ${currentPage === 1 ? \"disabled\" : \"\"}`}\r\n        >\r\n          prev\r\n        </button>\r\n        <Pagination\r\n          itemsPerPage={jobsPerPage}\r\n          totalItems={jobs.length}\r\n          paginate={paginate}\r\n        />\r\n        <button\r\n          onClick={goToNextPage}\r\n          className={`next ${\r\n            currentPage === jobs.length / jobsPerPage ? \"disabled\" : \"\"\r\n          }`}\r\n        >\r\n          next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobList;\r\n","import React from \"react\";\r\n\r\nfunction empty(element) {\r\n  while (element.firstElementChild) {\r\n    element.firstElementChild.remove();\r\n  }\r\n}\r\n\r\nfunction createError(parentClass, resp) {\r\n  const parent = document.querySelector(parentClass);\r\n  const errorContainer = document.createElement(\"div\");\r\n  errorContainer.className = \"err-container\";\r\n  resp.forEach(err => {\r\n    const error = document.createElement(\"small\");\r\n    error.className = \"APIErr\";\r\n    error.innerText = err;\r\n    errorContainer.appendChild(error);\r\n  });\r\n  parent.appendChild(errorContainer);\r\n}\r\n\r\nfunction removeErrElement(ele) {\r\n  if (ele) {\r\n    empty(ele);\r\n    ele.remove();\r\n  }\r\n}\r\n\r\nfunction clearInputs(selecters) {\r\n  const inputs = document.querySelectorAll(selecters);\r\n  inputs.forEach(input => {\r\n    input.value = \"\";\r\n  });\r\n}\r\n\r\nfunction createInput(name, type, value, handleChange, label) {\r\n  return (\r\n    <>\r\n      <label>{label}:</label>\r\n      <input\r\n        name={name}\r\n        id={name}\r\n        type={type}\r\n        value={value}\r\n        onChange={handleChange}\r\n      ></input>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { empty, createError, removeErrElement, clearInputs, createInput };\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  removeErrElement,\r\n  clearInputs,\r\n  createError,\r\n  createInput,\r\n} from \"../helper\";\r\nimport swal from 'sweetalert';\r\nimport \"../css/Login.css\"\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst WARNING = \"All fields are required\";\r\n\r\nfunction LogIn({ logIn }) {\r\n  const history = useHistory();\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const [isInvalid, setInvalid] = useState(true);\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(formData => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n    setIsTouched(true);\r\n    e.target.value === \"\" ? setInvalid(true) : setInvalid(false);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    //clear old errors\r\n    removeErrElement(document.querySelector(\".err-container\"));\r\n    if (!isInvalid) {\r\n      setFormData(INITIAL_STATE);\r\n      let resp = await logIn(formData);\r\n      if (resp) {\r\n        createError(\".LogIn-Form-Container\", resp);\r\n        clearInputs(\"#username, #password\");\r\n      } else {\r\n        history.push(\"/companies\");\r\n      }\r\n    } else {\r\n      swal(\"Oop, somthings wrong\");\r\n      console.log(\"something's wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"LogIn\">\r\n      <div className=\"LogIn-header\">Log in</div>\r\n      <form onSubmit={handleSubmit} className=\"LogIn-form LogIn-Form-Container\">\r\n        {createInput(\r\n          \"username\",\r\n          \"text\",\r\n          formData.username,\r\n          handleChange,\r\n          \"Username\"\r\n        )}\r\n        {createInput(\r\n          \"password\",\r\n          \"password\",\r\n          formData.password,\r\n          handleChange,\r\n          \"Password\"\r\n        )}\r\n        {isInvalid && isTouched && <small>{WARNING}</small>}\r\n        <button className=\"LogIn-button\">Log in</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LogIn;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {\r\n  clearInputs,\r\n  createError,\r\n  createInput,\r\n  removeErrElement,\r\n} from \"../helper\";\r\nimport swal from \"sweetalert\";\r\nimport \"../css/Signup.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  password: \"\",\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n};\r\n\r\nconst WARNING = \"All fields are required\";\r\n\r\nfunction SignUp({ signup }) {\r\n  const [formData, setFormData] = useState(INITIAL_STATE);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const [isInvalid, setInvalid] = useState(true);\r\n  const history = useHistory();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(formData => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n    setIsTouched(true);\r\n    e.target.value === \"\" ? setInvalid(true) : setInvalid(false);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    setFormData(INITIAL_STATE);\r\n    //clear old errors\r\n    removeErrElement(document.querySelector(\".err-container\"));\r\n    if (!isInvalid) {\r\n      let resp = await signup(formData); //if there is resp returned, it's error(s)\r\n      if (resp) {\r\n        createError(\".SignUp-form\", resp);\r\n        clearInputs(\"#username, #password, #firstName, #lastName, #email\");\r\n      } else {\r\n        history.push(\"/companies\");\r\n      }\r\n    } else {\r\n      swal(\"Oop, somthings wrong\");\r\n      console.log(\"something's wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"SignUp\">\r\n      <div className=\"SignUp-header\">Sign up</div>\r\n      <form onSubmit={handleSubmit} className=\"SignUp-form\">\r\n        {createInput(\r\n          \"username\",\r\n          \"text\",\r\n          formData.username,\r\n          handleChange,\r\n          \"Username\"\r\n        )}\r\n        {createInput(\r\n          \"password\",\r\n          \"password\",\r\n          formData.password,\r\n          handleChange,\r\n          \"Password\"\r\n        )}\r\n        {createInput(\r\n          \"firstName\",\r\n          \"text\",\r\n          formData.firstName,\r\n          handleChange,\r\n          \"First Name\"\r\n        )}\r\n        {createInput(\r\n          \"lastName\",\r\n          \"text\",\r\n          formData.lastName,\r\n          handleChange,\r\n          \"Last Name\"\r\n        )}\r\n        {createInput(\"email\", \"email\", formData.email, handleChange, \"Email\")}\r\n        {isInvalid && isTouched && <small>{WARNING}</small>}\r\n        <button className=\"SignUp-button\">Sign up</button>\r\n      </form>\r\n      <div className=\"SignUp-already\">\r\n        Already signed up? <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useContext } from \"react\";\r\nimport UserInfoContext from \"./UserInfoContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CompaniesList from \"./Companies/CompaniesList\";\r\nimport \"./css/Home.css\";\r\n\r\nfunction Home() {\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn } = userInfo;\r\n  \r\n  return (\r\n    <div className=\"Jobly\">\r\n      {isLoggedIn ? (\r\n        <CompaniesList />\r\n      ) : (\r\n        <>\r\n          <div className=\"Jobly-header\">Jobly</div>\r\n          <div className=\"Jobly-description\">\r\n            All the jobs in one, convenient place.\r\n          </div>\r\n          <div className=\"Jobly-btn-container\">\r\n            <Link to={`/login`}>\r\n              <button className=\"Jobly-btn\">Log in</button>\r\n            </Link>\r\n            <Link to={`/signup`}>\r\n              <button className=\"Jobly-btn\">Sign up</button>\r\n            </Link>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./css/NotFound.css\";\r\nimport ERROR_PIC from \"./assets/error-404.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"NotFound\">\r\n      <div className=\"NoutFound-text\">\r\n        Sorry, we did not find the page you were looking for. Please try again!\r\n      </div>\r\n      <img src={ERROR_PIC} alt=\"404-Page-Not-Found\" className=\"NotFound-img\"></img>\r\n      <Link to={`/`} className=\"NotFound-backHome\">Back home</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport UserInfoContext from \"../UserInfoContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createError, removeErrElement, createInput } from \"../helper\";\r\nimport LoadingSpin from \"react-loading-spin\";\r\nimport JoblyApi from \"../api\";\r\nimport \"../css/Profile.css\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst WARNING = \"All fields are required\";\r\nconst ERROR = \"Oops, something's wrong\";\r\n\r\nfunction Profile() {\r\n  const userInfo = useContext(UserInfoContext);\r\n  const { isLoggedIn, token, currentUser } = userInfo;\r\n  const [formData, setFormData] = useState(currentUser);\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const [isInvalid, setInvalid] = useState(true);\r\n\r\n  if (isLoggedIn === false && !token) {\r\n    return (\r\n      <div>\r\n        <p>Please log in to access this page</p>\r\n        <Link to={`/login`}>Log in</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getFormData() {\r\n      try {\r\n        setFormData(currentUser);\r\n      } catch (e) {\r\n        console.log(e);\r\n        swal(ERROR);\r\n      }\r\n    }\r\n    getFormData();\r\n  }, [currentUser]);\r\n\r\n  //get the data for form data first\r\n  //- it's from currentUser\r\n  if (!formData) {\r\n    return (\r\n      <div className=\"loading\">\r\n        <LoadingSpin />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setFormData(formData => ({\r\n      ...formData,\r\n      [name]: value,\r\n    }));\r\n    setIsTouched(true);\r\n    e.target.value === \"\" ? setInvalid(true) : setInvalid(false);\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    //clear old errors everytime it submits\r\n    removeErrElement(document.querySelector(\".err-container\"));\r\n    if (!isInvalid) {\r\n      try {\r\n        await JoblyApi.authenticate({\r\n          username: formData.username,\r\n          password: formData.password,\r\n        });\r\n        await JoblyApi.updateInfo(\r\n          \"users\",\r\n          formData.username,\r\n          {\r\n            firstName: formData.firstName,\r\n            lastName: formData.lastName,\r\n            email: formData.email,\r\n          },\r\n          token\r\n        );\r\n      } catch (e) {\r\n        createError(\".Update-Form-Container\", e);\r\n      }\r\n    } else {\r\n      swal(ERROR);\r\n      console.log(\"something's wrong\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Profile\">\r\n      <div className=\"Profile-header\">{currentUser.username}</div>\r\n      <div className=\"Update-Form-Container\">\r\n        <form onSubmit={handleSubmit} className=\"Profile-form\">\r\n          {createInput(\r\n            \"firstName\",\r\n            \"text\",\r\n            formData.firstName,\r\n            handleChange,\r\n            \"First Name\"\r\n          )}\r\n          {createInput(\r\n            \"lastName\",\r\n            \"text\",\r\n            formData.lastName,\r\n            handleChange,\r\n            \"Last Name\"\r\n          )}\r\n          {createInput(\"email\", \"email\", formData.email, handleChange, \"Email\")}\r\n          <label>Confirm your Password to make changes:</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            onChange={handleChange}\r\n          />\r\n          {isInvalid && isTouched && <small color=\"warning\">{WARNING}</small>}\r\n          <button className=\"Profile-btn\">Save Changes</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./NavBar\";\r\nimport CompaniesList from \"./Companies/CompaniesList\";\r\nimport CompanyDetail from \"./Companies/CompanyDetail\";\r\nimport JobList from \"./Jobs/JobList\";\r\nimport LogIn from \"./Login&Signup/LogIn\";\r\nimport SignUp from \"./Login&Signup/SignUp\";\r\nimport Home from \"./Home\";\r\nimport NotFound from \"./NotFound\";\r\nimport Profile from \"./Profile/Profile\";\r\n\r\nimport UserInfoContext from \"./UserInfoContext\";\r\nimport JoblyApi from \"./api\";\r\nimport { useLocalStorageState } from \"./hooks\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport swal from \"sweetalert\";\r\nimport \"./css/Routes.css\";\r\n\r\nfunction Routes() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [token, setToken] = useLocalStorageState(\"token\", null);\r\n  let username;\r\n\r\n  if (token) {\r\n    const decodedToken = jwt_decode(token.token);\r\n    username = decodedToken.username;\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function getUser() {\r\n      try {\r\n        const user = await JoblyApi.getSingleInfo(\"users\", username, token);\r\n        if (user) {\r\n          setCurrentUser(user);\r\n          setIsLoggedIn(true);\r\n        }\r\n      } catch (e) {\r\n        swal(\"Oops, something's wrong\");\r\n        throw new Error(e);\r\n      }\r\n    }\r\n    //if I do not check if there is token, I run into error. Is this okay/common to do?\r\n    token ? getUser() : console.log(\"No logged in user\");\r\n  }, [token]);\r\n\r\n  const signUp = async data => {\r\n    try {\r\n      const newUserToken = await JoblyApi.signUp(data);\r\n      const user = await JoblyApi.getSingleInfo(\r\n        \"users\",\r\n        data.username,\r\n        newUserToken\r\n      );\r\n      setToken(newUserToken);\r\n      setCurrentUser(user);\r\n      setIsLoggedIn(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return e;\r\n    }\r\n  };\r\n\r\n  const logIn = async data => {\r\n    try {\r\n      const token = await JoblyApi.authenticate(data);\r\n      const user = await JoblyApi.getSingleInfo(\"users\", data.username, token);\r\n      setToken(token);\r\n      setCurrentUser(user);\r\n      setIsLoggedIn(true);\r\n    } catch (e) {\r\n      console.log(e);\r\n      return e;\r\n    }\r\n  };\r\n\r\n  const logOut = () => {\r\n    setToken(null);\r\n    setCurrentUser();\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <UserInfoContext.Provider\r\n        value={{\r\n          currentUser: currentUser,\r\n          token: token,\r\n          isLoggedIn: isLoggedIn,\r\n        }}\r\n      >\r\n        <Navbar logOut={logOut} />\r\n        <main className=\"Routes-main\">\r\n          <Switch>\r\n            <Route exact path=\"/login\">\r\n              <LogIn logIn={logIn} />\r\n            </Route>\r\n            <Route exact path=\"/signup\">\r\n              <SignUp signup={signUp} />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n            <Route exact path=\"/companies\">\r\n              <CompaniesList />\r\n            </Route>\r\n            <Route exact path=\"/companies/:handle\">\r\n              <CompanyDetail />\r\n            </Route>\r\n            <Route exact path=\"/jobs\">\r\n              <JobList />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route>\r\n              <NotFound />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </UserInfoContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport Routes from \"../Routes\";\nimport \"../css/App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/error-404.11ed1efd.png\";"],"sourceRoot":""}